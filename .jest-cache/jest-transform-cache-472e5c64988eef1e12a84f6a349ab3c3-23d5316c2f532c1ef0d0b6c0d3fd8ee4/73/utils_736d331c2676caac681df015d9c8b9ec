769e8814e129077aada5f71f7574b27b
"use strict";

/**
 * Helper Functions for File Operations
 *
 * This file contains utility functions for file system operations,
 * path manipulation, and other common tasks used by the CLI
 */
/* istanbul ignore next */
function cov_grkb1stoa() {
  var path = "/workspace/src/utils.ts";
  var hash = "cbea0063136cb374928b421546a739f3d0e3358b";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/workspace/src/utils.ts",
    statementMap: {
      "0": {
        start: {
          line: 8,
          column: 22
        },
        end: {
          line: 18,
          column: 3
        }
      },
      "1": {
        start: {
          line: 9,
          column: 4
        },
        end: {
          line: 9,
          column: 33
        }
      },
      "2": {
        start: {
          line: 9,
          column: 26
        },
        end: {
          line: 9,
          column: 33
        }
      },
      "3": {
        start: {
          line: 10,
          column: 15
        },
        end: {
          line: 10,
          column: 52
        }
      },
      "4": {
        start: {
          line: 11,
          column: 4
        },
        end: {
          line: 13,
          column: 5
        }
      },
      "5": {
        start: {
          line: 12,
          column: 6
        },
        end: {
          line: 12,
          column: 68
        }
      },
      "6": {
        start: {
          line: 12,
          column: 51
        },
        end: {
          line: 12,
          column: 63
        }
      },
      "7": {
        start: {
          line: 14,
          column: 4
        },
        end: {
          line: 14,
          column: 39
        }
      },
      "8": {
        start: {
          line: 16,
          column: 4
        },
        end: {
          line: 16,
          column: 33
        }
      },
      "9": {
        start: {
          line: 16,
          column: 26
        },
        end: {
          line: 16,
          column: 33
        }
      },
      "10": {
        start: {
          line: 17,
          column: 4
        },
        end: {
          line: 17,
          column: 17
        }
      },
      "11": {
        start: {
          line: 19,
          column: 25
        },
        end: {
          line: 23,
          column: 2
        }
      },
      "12": {
        start: {
          line: 20,
          column: 4
        },
        end: {
          line: 20,
          column: 72
        }
      },
      "13": {
        start: {
          line: 22,
          column: 4
        },
        end: {
          line: 22,
          column: 21
        }
      },
      "14": {
        start: {
          line: 24,
          column: 19
        },
        end: {
          line: 40,
          column: 4
        }
      },
      "15": {
        start: {
          line: 25,
          column: 18
        },
        end: {
          line: 32,
          column: 5
        }
      },
      "16": {
        start: {
          line: 26,
          column: 8
        },
        end: {
          line: 30,
          column: 10
        }
      },
      "17": {
        start: {
          line: 27,
          column: 21
        },
        end: {
          line: 27,
          column: 23
        }
      },
      "18": {
        start: {
          line: 28,
          column: 12
        },
        end: {
          line: 28,
          column: 95
        }
      },
      "19": {
        start: {
          line: 28,
          column: 29
        },
        end: {
          line: 28,
          column: 95
        }
      },
      "20": {
        start: {
          line: 28,
          column: 77
        },
        end: {
          line: 28,
          column: 95
        }
      },
      "21": {
        start: {
          line: 29,
          column: 12
        },
        end: {
          line: 29,
          column: 22
        }
      },
      "22": {
        start: {
          line: 31,
          column: 8
        },
        end: {
          line: 31,
          column: 26
        }
      },
      "23": {
        start: {
          line: 33,
          column: 4
        },
        end: {
          line: 39,
          column: 6
        }
      },
      "24": {
        start: {
          line: 34,
          column: 8
        },
        end: {
          line: 34,
          column: 46
        }
      },
      "25": {
        start: {
          line: 34,
          column: 35
        },
        end: {
          line: 34,
          column: 46
        }
      },
      "26": {
        start: {
          line: 35,
          column: 21
        },
        end: {
          line: 35,
          column: 23
        }
      },
      "27": {
        start: {
          line: 36,
          column: 8
        },
        end: {
          line: 36,
          column: 137
        }
      },
      "28": {
        start: {
          line: 36,
          column: 25
        },
        end: {
          line: 36,
          column: 137
        }
      },
      "29": {
        start: {
          line: 36,
          column: 38
        },
        end: {
          line: 36,
          column: 50
        }
      },
      "30": {
        start: {
          line: 36,
          column: 56
        },
        end: {
          line: 36,
          column: 57
        }
      },
      "31": {
        start: {
          line: 36,
          column: 78
        },
        end: {
          line: 36,
          column: 137
        }
      },
      "32": {
        start: {
          line: 36,
          column: 102
        },
        end: {
          line: 36,
          column: 137
        }
      },
      "33": {
        start: {
          line: 37,
          column: 8
        },
        end: {
          line: 37,
          column: 40
        }
      },
      "34": {
        start: {
          line: 38,
          column: 8
        },
        end: {
          line: 38,
          column: 22
        }
      },
      "35": {
        start: {
          line: 41,
          column: 0
        },
        end: {
          line: 41,
          column: 62
        }
      },
      "36": {
        start: {
          line: 42,
          column: 0
        },
        end: {
          line: 42,
          column: 30
        }
      },
      "37": {
        start: {
          line: 43,
          column: 0
        },
        end: {
          line: 43,
          column: 42
        }
      },
      "38": {
        start: {
          line: 44,
          column: 0
        },
        end: {
          line: 44,
          column: 32
        }
      },
      "39": {
        start: {
          line: 45,
          column: 0
        },
        end: {
          line: 45,
          column: 24
        }
      },
      "40": {
        start: {
          line: 46,
          column: 0
        },
        end: {
          line: 46,
          column: 36
        }
      },
      "41": {
        start: {
          line: 47,
          column: 0
        },
        end: {
          line: 47,
          column: 38
        }
      },
      "42": {
        start: {
          line: 48,
          column: 0
        },
        end: {
          line: 48,
          column: 36
        }
      },
      "43": {
        start: {
          line: 49,
          column: 0
        },
        end: {
          line: 49,
          column: 42
        }
      },
      "44": {
        start: {
          line: 50,
          column: 0
        },
        end: {
          line: 50,
          column: 48
        }
      },
      "45": {
        start: {
          line: 51,
          column: 0
        },
        end: {
          line: 51,
          column: 42
        }
      },
      "46": {
        start: {
          line: 52,
          column: 0
        },
        end: {
          line: 52,
          column: 42
        }
      },
      "47": {
        start: {
          line: 53,
          column: 0
        },
        end: {
          line: 53,
          column: 28
        }
      },
      "48": {
        start: {
          line: 54,
          column: 0
        },
        end: {
          line: 54,
          column: 32
        }
      },
      "49": {
        start: {
          line: 55,
          column: 0
        },
        end: {
          line: 55,
          column: 34
        }
      },
      "50": {
        start: {
          line: 56,
          column: 0
        },
        end: {
          line: 56,
          column: 36
        }
      },
      "51": {
        start: {
          line: 57,
          column: 0
        },
        end: {
          line: 57,
          column: 46
        }
      },
      "52": {
        start: {
          line: 58,
          column: 0
        },
        end: {
          line: 58,
          column: 42
        }
      },
      "53": {
        start: {
          line: 59,
          column: 0
        },
        end: {
          line: 59,
          column: 54
        }
      },
      "54": {
        start: {
          line: 60,
          column: 0
        },
        end: {
          line: 60,
          column: 50
        }
      },
      "55": {
        start: {
          line: 61,
          column: 0
        },
        end: {
          line: 61,
          column: 44
        }
      },
      "56": {
        start: {
          line: 62,
          column: 0
        },
        end: {
          line: 62,
          column: 44
        }
      },
      "57": {
        start: {
          line: 63,
          column: 0
        },
        end: {
          line: 63,
          column: 24
        }
      },
      "58": {
        start: {
          line: 64,
          column: 0
        },
        end: {
          line: 64,
          column: 20
        }
      },
      "59": {
        start: {
          line: 65,
          column: 0
        },
        end: {
          line: 65,
          column: 34
        }
      },
      "60": {
        start: {
          line: 66,
          column: 0
        },
        end: {
          line: 66,
          column: 44
        }
      },
      "61": {
        start: {
          line: 67,
          column: 0
        },
        end: {
          line: 67,
          column: 44
        }
      },
      "62": {
        start: {
          line: 68,
          column: 0
        },
        end: {
          line: 68,
          column: 42
        }
      },
      "63": {
        start: {
          line: 69,
          column: 0
        },
        end: {
          line: 69,
          column: 56
        }
      },
      "64": {
        start: {
          line: 70,
          column: 0
        },
        end: {
          line: 70,
          column: 56
        }
      },
      "65": {
        start: {
          line: 71,
          column: 0
        },
        end: {
          line: 71,
          column: 60
        }
      },
      "66": {
        start: {
          line: 72,
          column: 11
        },
        end: {
          line: 72,
          column: 44
        }
      },
      "67": {
        start: {
          line: 73,
          column: 13
        },
        end: {
          line: 73,
          column: 42
        }
      },
      "68": {
        start: {
          line: 74,
          column: 16
        },
        end: {
          line: 74,
          column: 34
        }
      },
      "69": {
        start: {
          line: 81,
          column: 4
        },
        end: {
          line: 90,
          column: 5
        }
      },
      "70": {
        start: {
          line: 82,
          column: 8
        },
        end: {
          line: 82,
          column: 36
        }
      },
      "71": {
        start: {
          line: 85,
          column: 29
        },
        end: {
          line: 85,
          column: 87
        }
      },
      "72": {
        start: {
          line: 86,
          column: 8
        },
        end: {
          line: 89,
          column: 11
        }
      },
      "73": {
        start: {
          line: 98,
          column: 4
        },
        end: {
          line: 105,
          column: 5
        }
      },
      "74": {
        start: {
          line: 99,
          column: 22
        },
        end: {
          line: 99,
          column: 44
        }
      },
      "75": {
        start: {
          line: 100,
          column: 8
        },
        end: {
          line: 100,
          column: 35
        }
      },
      "76": {
        start: {
          line: 104,
          column: 8
        },
        end: {
          line: 104,
          column: 21
        }
      },
      "77": {
        start: {
          line: 113,
          column: 4
        },
        end: {
          line: 120,
          column: 5
        }
      },
      "78": {
        start: {
          line: 114,
          column: 22
        },
        end: {
          line: 114,
          column: 45
        }
      },
      "79": {
        start: {
          line: 115,
          column: 8
        },
        end: {
          line: 115,
          column: 30
        }
      },
      "80": {
        start: {
          line: 119,
          column: 8
        },
        end: {
          line: 119,
          column: 21
        }
      },
      "81": {
        start: {
          line: 128,
          column: 4
        },
        end: {
          line: 134,
          column: 5
        }
      },
      "82": {
        start: {
          line: 129,
          column: 8
        },
        end: {
          line: 129,
          column: 34
        }
      },
      "83": {
        start: {
          line: 130,
          column: 8
        },
        end: {
          line: 130,
          column: 20
        }
      },
      "84": {
        start: {
          line: 133,
          column: 8
        },
        end: {
          line: 133,
          column: 21
        }
      },
      "85": {
        start: {
          line: 144,
          column: 4
        },
        end: {
          line: 154,
          column: 5
        }
      },
      "86": {
        start: {
          line: 145,
          column: 8
        },
        end: {
          line: 145,
          column: 42
        }
      },
      "87": {
        start: {
          line: 148,
          column: 29
        },
        end: {
          line: 148,
          column: 87
        }
      },
      "88": {
        start: {
          line: 149,
          column: 8
        },
        end: {
          line: 153,
          column: 11
        }
      },
      "89": {
        start: {
          line: 163,
          column: 4
        },
        end: {
          line: 172,
          column: 5
        }
      },
      "90": {
        start: {
          line: 164,
          column: 8
        },
        end: {
          line: 164,
          column: 58
        }
      },
      "91": {
        start: {
          line: 167,
          column: 29
        },
        end: {
          line: 167,
          column: 87
        }
      },
      "92": {
        start: {
          line: 168,
          column: 8
        },
        end: {
          line: 171,
          column: 11
        }
      },
      "93": {
        start: {
          line: 181,
          column: 4
        },
        end: {
          line: 190,
          column: 5
        }
      },
      "94": {
        start: {
          line: 182,
          column: 8
        },
        end: {
          line: 182,
          column: 43
        }
      },
      "95": {
        start: {
          line: 185,
          column: 29
        },
        end: {
          line: 185,
          column: 87
        }
      },
      "96": {
        start: {
          line: 186,
          column: 8
        },
        end: {
          line: 189,
          column: 11
        }
      },
      "97": {
        start: {
          line: 199,
          column: 28
        },
        end: {
          line: 199,
          column: 48
        }
      },
      "98": {
        start: {
          line: 200,
          column: 4
        },
        end: {
          line: 202,
          column: 5
        }
      },
      "99": {
        start: {
          line: 201,
          column: 8
        },
        end: {
          line: 201,
          column: 64
        }
      },
      "100": {
        start: {
          line: 203,
          column: 23
        },
        end: {
          line: 206,
          column: 34
        }
      },
      "101": {
        start: {
          line: 205,
          column: 18
        },
        end: {
          line: 205,
          column: 40
        }
      },
      "102": {
        start: {
          line: 206,
          column: 21
        },
        end: {
          line: 206,
          column: 33
        }
      },
      "103": {
        start: {
          line: 208,
          column: 30
        },
        end: {
          line: 208,
          column: 100
        }
      },
      "104": {
        start: {
          line: 208,
          column: 63
        },
        end: {
          line: 208,
          column: 99
        }
      },
      "105": {
        start: {
          line: 209,
          column: 4
        },
        end: {
          line: 211,
          column: 5
        }
      },
      "106": {
        start: {
          line: 210,
          column: 8
        },
        end: {
          line: 210,
          column: 131
        }
      },
      "107": {
        start: {
          line: 213,
          column: 4
        },
        end: {
          line: 213,
          column: 43
        }
      },
      "108": {
        start: {
          line: 221,
          column: 28
        },
        end: {
          line: 221,
          column: 48
        }
      },
      "109": {
        start: {
          line: 222,
          column: 4
        },
        end: {
          line: 224,
          column: 5
        }
      },
      "110": {
        start: {
          line: 223,
          column: 8
        },
        end: {
          line: 223,
          column: 68
        }
      },
      "111": {
        start: {
          line: 225,
          column: 4
        },
        end: {
          line: 229,
          column: 5
        }
      },
      "112": {
        start: {
          line: 226,
          column: 8
        },
        end: {
          line: 228,
          column: 9
        }
      },
      "113": {
        start: {
          line: 227,
          column: 12
        },
        end: {
          line: 227,
          column: 116
        }
      },
      "114": {
        start: {
          line: 237,
          column: 4
        },
        end: {
          line: 237,
          column: 91
        }
      },
      "115": {
        start: {
          line: 246,
          column: 4
        },
        end: {
          line: 246,
          column: 35
        }
      },
      "116": {
        start: {
          line: 254,
          column: 4
        },
        end: {
          line: 254,
          column: 34
        }
      },
      "117": {
        start: {
          line: 262,
          column: 4
        },
        end: {
          line: 262,
          column: 34
        }
      },
      "118": {
        start: {
          line: 271,
          column: 4
        },
        end: {
          line: 271,
          column: 40
        }
      },
      "119": {
        start: {
          line: 279,
          column: 4
        },
        end: {
          line: 279,
          column: 34
        }
      },
      "120": {
        start: {
          line: 287,
          column: 4
        },
        end: {
          line: 295,
          column: 5
        }
      },
      "121": {
        start: {
          line: 289,
          column: 12
        },
        end: {
          line: 289,
          column: 24
        }
      },
      "122": {
        start: {
          line: 291,
          column: 12
        },
        end: {
          line: 291,
          column: 26
        }
      },
      "123": {
        start: {
          line: 294,
          column: 12
        },
        end: {
          line: 294,
          column: 68
        }
      },
      "124": {
        start: {
          line: 303,
          column: 4
        },
        end: {
          line: 303,
          column: 65
        }
      },
      "125": {
        start: {
          line: 312,
          column: 17
        },
        end: {
          line: 312,
          column: 31
        }
      },
      "126": {
        start: {
          line: 313,
          column: 17
        },
        end: {
          line: 316,
          column: 5
        }
      },
      "127": {
        start: {
          line: 317,
          column: 4
        },
        end: {
          line: 321,
          column: 5
        }
      },
      "128": {
        start: {
          line: 318,
          column: 8
        },
        end: {
          line: 318,
          column: 54
        }
      },
      "129": {
        start: {
          line: 319,
          column: 8
        },
        end: {
          line: 319,
          column: 63
        }
      },
      "130": {
        start: {
          line: 320,
          column: 8
        },
        end: {
          line: 320,
          column: 69
        }
      },
      "131": {
        start: {
          line: 322,
          column: 4
        },
        end: {
          line: 322,
          column: 16
        }
      },
      "132": {
        start: {
          line: 330,
          column: 4
        },
        end: {
          line: 330,
          column: 69
        }
      },
      "133": {
        start: {
          line: 339,
          column: 4
        },
        end: {
          line: 343,
          column: 31
        }
      },
      "134": {
        start: {
          line: 350,
          column: 4
        },
        end: {
          line: 350,
          column: 35
        }
      },
      "135": {
        start: {
          line: 358,
          column: 4
        },
        end: {
          line: 367,
          column: 5
        }
      },
      "136": {
        start: {
          line: 359,
          column: 8
        },
        end: {
          line: 359,
          column: 36
        }
      },
      "137": {
        start: {
          line: 362,
          column: 29
        },
        end: {
          line: 362,
          column: 87
        }
      },
      "138": {
        start: {
          line: 363,
          column: 8
        },
        end: {
          line: 366,
          column: 11
        }
      },
      "139": {
        start: {
          line: 376,
          column: 4
        },
        end: {
          line: 386,
          column: 5
        }
      },
      "140": {
        start: {
          line: 377,
          column: 8
        },
        end: {
          line: 377,
          column: 33
        }
      },
      "141": {
        start: {
          line: 380,
          column: 29
        },
        end: {
          line: 380,
          column: 87
        }
      },
      "142": {
        start: {
          line: 381,
          column: 8
        },
        end: {
          line: 385,
          column: 11
        }
      },
      "143": {
        start: {
          line: 396,
          column: 17
        },
        end: {
          line: 396,
          column: 31
        }
      },
      "144": {
        start: {
          line: 398,
          column: 26
        },
        end: {
          line: 398,
          column: 113
        }
      },
      "145": {
        start: {
          line: 398,
          column: 53
        },
        end: {
          line: 398,
          column: 112
        }
      },
      "146": {
        start: {
          line: 399,
          column: 4
        },
        end: {
          line: 399,
          column: 48
        }
      },
      "147": {
        start: {
          line: 407,
          column: 29
        },
        end: {
          line: 407,
          column: 78
        }
      },
      "148": {
        start: {
          line: 408,
          column: 18
        },
        end: {
          line: 408,
          column: 49
        }
      },
      "149": {
        start: {
          line: 409,
          column: 4
        },
        end: {
          line: 414,
          column: 5
        }
      },
      "150": {
        start: {
          line: 410,
          column: 8
        },
        end: {
          line: 413,
          column: 10
        }
      },
      "151": {
        start: {
          line: 415,
          column: 31
        },
        end: {
          line: 415,
          column: 45
        }
      },
      "152": {
        start: {
          line: 416,
          column: 24
        },
        end: {
          line: 416,
          column: 38
        }
      },
      "153": {
        start: {
          line: 418,
          column: 24
        },
        end: {
          line: 418,
          column: 26
        }
      },
      "154": {
        start: {
          line: 419,
          column: 18
        },
        end: {
          line: 419,
          column: 48
        }
      },
      "155": {
        start: {
          line: 420,
          column: 4
        },
        end: {
          line: 431,
          column: 5
        }
      },
      "156": {
        start: {
          line: 421,
          column: 24
        },
        end: {
          line: 421,
          column: 35
        }
      },
      "157": {
        start: {
          line: 422,
          column: 8
        },
        end: {
          line: 423,
          column: 21
        }
      },
      "158": {
        start: {
          line: 423,
          column: 12
        },
        end: {
          line: 423,
          column: 21
        }
      },
      "159": {
        start: {
          line: 424,
          column: 27
        },
        end: {
          line: 424,
          column: 47
        }
      },
      "160": {
        start: {
          line: 425,
          column: 8
        },
        end: {
          line: 426,
          column: 21
        }
      },
      "161": {
        start: {
          line: 426,
          column: 12
        },
        end: {
          line: 426,
          column: 21
        }
      },
      "162": {
        start: {
          line: 427,
          column: 20
        },
        end: {
          line: 427,
          column: 59
        }
      },
      "163": {
        start: {
          line: 428,
          column: 22
        },
        end: {
          line: 428,
          column: 62
        }
      },
      "164": {
        start: {
          line: 430,
          column: 8
        },
        end: {
          line: 430,
          column: 61
        }
      },
      "165": {
        start: {
          line: 432,
          column: 4
        },
        end: {
          line: 435,
          column: 6
        }
      },
      "166": {
        start: {
          line: 443,
          column: 4
        },
        end: {
          line: 448,
          column: 31
        }
      },
      "167": {
        start: {
          line: 456,
          column: 34
        },
        end: {
          line: 456,
          column: 61
        }
      },
      "168": {
        start: {
          line: 458,
          column: 26
        },
        end: {
          line: 464,
          column: 47
        }
      },
      "169": {
        start: {
          line: 466,
          column: 22
        },
        end: {
          line: 466,
          column: 36
        }
      },
      "170": {
        start: {
          line: 468,
          column: 4
        },
        end: {
          line: 479,
          column: 5
        }
      },
      "171": {
        start: {
          line: 469,
          column: 8
        },
        end: {
          line: 478,
          column: 9
        }
      },
      "172": {
        start: {
          line: 471,
          column: 34
        },
        end: {
          line: 473,
          column: 56
        }
      },
      "173": {
        start: {
          line: 474,
          column: 12
        },
        end: {
          line: 474,
          column: 84
        }
      },
      "174": {
        start: {
          line: 477,
          column: 12
        },
        end: {
          line: 477,
          column: 77
        }
      },
      "175": {
        start: {
          line: 481,
          column: 4
        },
        end: {
          line: 481,
          column: 34
        }
      },
      "176": {
        start: {
          line: 482,
          column: 4
        },
        end: {
          line: 482,
          column: 74
        }
      },
      "177": {
        start: {
          line: 483,
          column: 4
        },
        end: {
          line: 483,
          column: 23
        }
      },
      "178": {
        start: {
          line: 492,
          column: 4
        },
        end: {
          line: 511,
          column: 5
        }
      },
      "179": {
        start: {
          line: 493,
          column: 26
        },
        end: {
          line: 493,
          column: 66
        }
      },
      "180": {
        start: {
          line: 494,
          column: 8
        },
        end: {
          line: 502,
          column: 9
        }
      },
      "181": {
        start: {
          line: 495,
          column: 12
        },
        end: {
          line: 495,
          column: 29
        }
      },
      "182": {
        start: {
          line: 497,
          column: 13
        },
        end: {
          line: 502,
          column: 9
        }
      },
      "183": {
        start: {
          line: 498,
          column: 12
        },
        end: {
          line: 498,
          column: 46
        }
      },
      "184": {
        start: {
          line: 501,
          column: 12
        },
        end: {
          line: 501,
          column: 76
        }
      },
      "185": {
        start: {
          line: 505,
          column: 29
        },
        end: {
          line: 505,
          column: 87
        }
      },
      "186": {
        start: {
          line: 506,
          column: 8
        },
        end: {
          line: 510,
          column: 11
        }
      },
      "187": {
        start: {
          line: 519,
          column: 4
        },
        end: {
          line: 531,
          column: 5
        }
      },
      "188": {
        start: {
          line: 521,
          column: 8
        },
        end: {
          line: 521,
          column: 51
        }
      },
      "189": {
        start: {
          line: 523,
          column: 8
        },
        end: {
          line: 523,
          column: 55
        }
      },
      "190": {
        start: {
          line: 526,
          column: 29
        },
        end: {
          line: 526,
          column: 87
        }
      },
      "191": {
        start: {
          line: 527,
          column: 8
        },
        end: {
          line: 530,
          column: 11
        }
      },
      "192": {
        start: {
          line: 540,
          column: 21
        },
        end: {
          line: 540,
          column: 76
        }
      },
      "193": {
        start: {
          line: 541,
          column: 4
        },
        end: {
          line: 551,
          column: 5
        }
      },
      "194": {
        start: {
          line: 542,
          column: 22
        },
        end: {
          line: 542,
          column: 48
        }
      },
      "195": {
        start: {
          line: 543,
          column: 8
        },
        end: {
          line: 543,
          column: 98
        }
      },
      "196": {
        start: {
          line: 543,
          column: 36
        },
        end: {
          line: 543,
          column: 56
        }
      },
      "197": {
        start: {
          line: 543,
          column: 70
        },
        end: {
          line: 543,
          column: 96
        }
      },
      "198": {
        start: {
          line: 546,
          column: 29
        },
        end: {
          line: 546,
          column: 87
        }
      },
      "199": {
        start: {
          line: 547,
          column: 8
        },
        end: {
          line: 550,
          column: 11
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 8,
            column: 74
          },
          end: {
            line: 8,
            column: 75
          }
        },
        loc: {
          start: {
            line: 8,
            column: 96
          },
          end: {
            line: 15,
            column: 1
          }
        },
        line: 8
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 12,
            column: 38
          },
          end: {
            line: 12,
            column: 39
          }
        },
        loc: {
          start: {
            line: 12,
            column: 49
          },
          end: {
            line: 12,
            column: 65
          }
        },
        line: 12
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 15,
            column: 6
          },
          end: {
            line: 15,
            column: 7
          }
        },
        loc: {
          start: {
            line: 15,
            column: 28
          },
          end: {
            line: 18,
            column: 1
          }
        },
        line: 15
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 19,
            column: 80
          },
          end: {
            line: 19,
            column: 81
          }
        },
        loc: {
          start: {
            line: 19,
            column: 95
          },
          end: {
            line: 21,
            column: 1
          }
        },
        line: 19
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 21,
            column: 5
          },
          end: {
            line: 21,
            column: 6
          }
        },
        loc: {
          start: {
            line: 21,
            column: 20
          },
          end: {
            line: 23,
            column: 1
          }
        },
        line: 21
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 24,
            column: 51
          },
          end: {
            line: 24,
            column: 52
          }
        },
        loc: {
          start: {
            line: 24,
            column: 63
          },
          end: {
            line: 40,
            column: 1
          }
        },
        line: 24
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 25,
            column: 18
          },
          end: {
            line: 25,
            column: 19
          }
        },
        loc: {
          start: {
            line: 25,
            column: 30
          },
          end: {
            line: 32,
            column: 5
          }
        },
        line: 25
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 26,
            column: 48
          },
          end: {
            line: 26,
            column: 49
          }
        },
        loc: {
          start: {
            line: 26,
            column: 61
          },
          end: {
            line: 30,
            column: 9
          }
        },
        line: 26
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 33,
            column: 11
          },
          end: {
            line: 33,
            column: 12
          }
        },
        loc: {
          start: {
            line: 33,
            column: 26
          },
          end: {
            line: 39,
            column: 5
          }
        },
        line: 33
      },
      "9": {
        name: "ensureDir",
        decl: {
          start: {
            line: 80,
            column: 15
          },
          end: {
            line: 80,
            column: 24
          }
        },
        loc: {
          start: {
            line: 80,
            column: 34
          },
          end: {
            line: 91,
            column: 1
          }
        },
        line: 80
      },
      "10": {
        name: "directoryExists",
        decl: {
          start: {
            line: 97,
            column: 15
          },
          end: {
            line: 97,
            column: 30
          }
        },
        loc: {
          start: {
            line: 97,
            column: 40
          },
          end: {
            line: 106,
            column: 1
          }
        },
        line: 97
      },
      "11": {
        name: "fileExists",
        decl: {
          start: {
            line: 112,
            column: 15
          },
          end: {
            line: 112,
            column: 25
          }
        },
        loc: {
          start: {
            line: 112,
            column: 36
          },
          end: {
            line: 121,
            column: 1
          }
        },
        line: 112
      },
      "12": {
        name: "exists",
        decl: {
          start: {
            line: 127,
            column: 15
          },
          end: {
            line: 127,
            column: 21
          }
        },
        loc: {
          start: {
            line: 127,
            column: 32
          },
          end: {
            line: 135,
            column: 1
          }
        },
        line: 127
      },
      "13": {
        name: "copyTemplate",
        decl: {
          start: {
            line: 143,
            column: 15
          },
          end: {
            line: 143,
            column: 27
          }
        },
        loc: {
          start: {
            line: 143,
            column: 70
          },
          end: {
            line: 155,
            column: 1
          }
        },
        line: 143
      },
      "14": {
        name: "writeJsonFile",
        decl: {
          start: {
            line: 162,
            column: 15
          },
          end: {
            line: 162,
            column: 28
          }
        },
        loc: {
          start: {
            line: 162,
            column: 45
          },
          end: {
            line: 173,
            column: 1
          }
        },
        line: 162
      },
      "15": {
        name: "readJsonFile",
        decl: {
          start: {
            line: 180,
            column: 15
          },
          end: {
            line: 180,
            column: 27
          }
        },
        loc: {
          start: {
            line: 180,
            column: 38
          },
          end: {
            line: 191,
            column: 1
          }
        },
        line: 180
      },
      "16": {
        name: "parseAssistants",
        decl: {
          start: {
            line: 198,
            column: 9
          },
          end: {
            line: 198,
            column: 24
          }
        },
        loc: {
          start: {
            line: 198,
            column: 32
          },
          end: {
            line: 214,
            column: 1
          }
        },
        line: 198
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 205,
            column: 13
          },
          end: {
            line: 205,
            column: 14
          }
        },
        loc: {
          start: {
            line: 205,
            column: 18
          },
          end: {
            line: 205,
            column: 40
          }
        },
        line: 205
      },
      "18": {
        name: "(anonymous_18)",
        decl: {
          start: {
            line: 206,
            column: 16
          },
          end: {
            line: 206,
            column: 17
          }
        },
        loc: {
          start: {
            line: 206,
            column: 21
          },
          end: {
            line: 206,
            column: 33
          }
        },
        line: 206
      },
      "19": {
        name: "(anonymous_19)",
        decl: {
          start: {
            line: 208,
            column: 48
          },
          end: {
            line: 208,
            column: 49
          }
        },
        loc: {
          start: {
            line: 208,
            column: 63
          },
          end: {
            line: 208,
            column: 99
          }
        },
        line: 208
      },
      "20": {
        name: "validateAssistants",
        decl: {
          start: {
            line: 220,
            column: 9
          },
          end: {
            line: 220,
            column: 27
          }
        },
        loc: {
          start: {
            line: 220,
            column: 40
          },
          end: {
            line: 230,
            column: 1
          }
        },
        line: 220
      },
      "21": {
        name: "getAbsolutePath",
        decl: {
          start: {
            line: 236,
            column: 9
          },
          end: {
            line: 236,
            column: 24
          }
        },
        loc: {
          start: {
            line: 236,
            column: 36
          },
          end: {
            line: 238,
            column: 1
          }
        },
        line: 236
      },
      "22": {
        name: "getRelativePath",
        decl: {
          start: {
            line: 245,
            column: 9
          },
          end: {
            line: 245,
            column: 24
          }
        },
        loc: {
          start: {
            line: 245,
            column: 35
          },
          end: {
            line: 247,
            column: 1
          }
        },
        line: 245
      },
      "23": {
        name: "joinPath",
        decl: {
          start: {
            line: 253,
            column: 9
          },
          end: {
            line: 253,
            column: 17
          }
        },
        loc: {
          start: {
            line: 253,
            column: 31
          },
          end: {
            line: 255,
            column: 1
          }
        },
        line: 253
      },
      "24": {
        name: "getDirName",
        decl: {
          start: {
            line: 261,
            column: 9
          },
          end: {
            line: 261,
            column: 19
          }
        },
        loc: {
          start: {
            line: 261,
            column: 30
          },
          end: {
            line: 263,
            column: 1
          }
        },
        line: 261
      },
      "25": {
        name: "getBaseName",
        decl: {
          start: {
            line: 270,
            column: 9
          },
          end: {
            line: 270,
            column: 20
          }
        },
        loc: {
          start: {
            line: 270,
            column: 36
          },
          end: {
            line: 272,
            column: 1
          }
        },
        line: 270
      },
      "26": {
        name: "getExtension",
        decl: {
          start: {
            line: 278,
            column: 9
          },
          end: {
            line: 278,
            column: 21
          }
        },
        loc: {
          start: {
            line: 278,
            column: 32
          },
          end: {
            line: 280,
            column: 1
          }
        },
        line: 278
      },
      "27": {
        name: "getTemplateFormat",
        decl: {
          start: {
            line: 286,
            column: 9
          },
          end: {
            line: 286,
            column: 26
          }
        },
        loc: {
          start: {
            line: 286,
            column: 38
          },
          end: {
            line: 296,
            column: 1
          }
        },
        line: 286
      },
      "28": {
        name: "getTemplatePath",
        decl: {
          start: {
            line: 302,
            column: 9
          },
          end: {
            line: 302,
            column: 24
          }
        },
        loc: {
          start: {
            line: 302,
            column: 39
          },
          end: {
            line: 304,
            column: 1
          }
        },
        line: 302
      },
      "29": {
        name: "getCreatedDirectories",
        decl: {
          start: {
            line: 311,
            column: 9
          },
          end: {
            line: 311,
            column: 30
          }
        },
        loc: {
          start: {
            line: 311,
            column: 52
          },
          end: {
            line: 323,
            column: 1
          }
        },
        line: 311
      },
      "30": {
        name: "ensureTrailingSlash",
        decl: {
          start: {
            line: 329,
            column: 9
          },
          end: {
            line: 329,
            column: 28
          }
        },
        loc: {
          start: {
            line: 329,
            column: 38
          },
          end: {
            line: 331,
            column: 1
          }
        },
        line: 329
      },
      "31": {
        name: "sanitizeFilename",
        decl: {
          start: {
            line: 337,
            column: 9
          },
          end: {
            line: 337,
            column: 25
          }
        },
        loc: {
          start: {
            line: 337,
            column: 36
          },
          end: {
            line: 344,
            column: 1
          }
        },
        line: 337
      },
      "32": {
        name: "getHomeDirectory",
        decl: {
          start: {
            line: 349,
            column: 9
          },
          end: {
            line: 349,
            column: 25
          }
        },
        loc: {
          start: {
            line: 349,
            column: 28
          },
          end: {
            line: 351,
            column: 1
          }
        },
        line: 349
      },
      "33": {
        name: "remove",
        decl: {
          start: {
            line: 357,
            column: 15
          },
          end: {
            line: 357,
            column: 21
          }
        },
        loc: {
          start: {
            line: 357,
            column: 34
          },
          end: {
            line: 368,
            column: 1
          }
        },
        line: 357
      },
      "34": {
        name: "move",
        decl: {
          start: {
            line: 375,
            column: 15
          },
          end: {
            line: 375,
            column: 19
          }
        },
        loc: {
          start: {
            line: 375,
            column: 31
          },
          end: {
            line: 387,
            column: 1
          }
        },
        line: 375
      },
      "35": {
        name: "resolvePath",
        decl: {
          start: {
            line: 394,
            column: 9
          },
          end: {
            line: 394,
            column: 20
          }
        },
        loc: {
          start: {
            line: 394,
            column: 43
          },
          end: {
            line: 400,
            column: 1
          }
        },
        line: 394
      },
      "36": {
        name: "(anonymous_36)",
        decl: {
          start: {
            line: 398,
            column: 42
          },
          end: {
            line: 398,
            column: 43
          }
        },
        loc: {
          start: {
            line: 398,
            column: 53
          },
          end: {
            line: 398,
            column: 112
          }
        },
        line: 398
      },
      "37": {
        name: "parseFrontmatter",
        decl: {
          start: {
            line: 406,
            column: 9
          },
          end: {
            line: 406,
            column: 25
          }
        },
        loc: {
          start: {
            line: 406,
            column: 35
          },
          end: {
            line: 436,
            column: 1
          }
        },
        line: 406
      },
      "38": {
        name: "escapeTomlString",
        decl: {
          start: {
            line: 442,
            column: 9
          },
          end: {
            line: 442,
            column: 25
          }
        },
        loc: {
          start: {
            line: 442,
            column: 31
          },
          end: {
            line: 449,
            column: 1
          }
        },
        line: 442
      },
      "39": {
        name: "convertMdToToml",
        decl: {
          start: {
            line: 455,
            column: 9
          },
          end: {
            line: 455,
            column: 24
          }
        },
        loc: {
          start: {
            line: 455,
            column: 36
          },
          end: {
            line: 484,
            column: 1
          }
        },
        line: 455
      },
      "40": {
        name: "readAndProcessTemplate",
        decl: {
          start: {
            line: 491,
            column: 15
          },
          end: {
            line: 491,
            column: 37
          }
        },
        loc: {
          start: {
            line: 491,
            column: 66
          },
          end: {
            line: 512,
            column: 1
          }
        },
        line: 491
      },
      "41": {
        name: "writeProcessedTemplate",
        decl: {
          start: {
            line: 518,
            column: 15
          },
          end: {
            line: 518,
            column: 37
          }
        },
        loc: {
          start: {
            line: 518,
            column: 57
          },
          end: {
            line: 532,
            column: 1
          }
        },
        line: 518
      },
      "42": {
        name: "getMarkdownTemplateNames",
        decl: {
          start: {
            line: 539,
            column: 15
          },
          end: {
            line: 539,
            column: 39
          }
        },
        loc: {
          start: {
            line: 539,
            column: 56
          },
          end: {
            line: 552,
            column: 1
          }
        },
        line: 539
      },
      "43": {
        name: "(anonymous_43)",
        decl: {
          start: {
            line: 543,
            column: 28
          },
          end: {
            line: 543,
            column: 29
          }
        },
        loc: {
          start: {
            line: 543,
            column: 36
          },
          end: {
            line: 543,
            column: 56
          }
        },
        line: 543
      },
      "44": {
        name: "(anonymous_44)",
        decl: {
          start: {
            line: 543,
            column: 62
          },
          end: {
            line: 543,
            column: 63
          }
        },
        loc: {
          start: {
            line: 543,
            column: 70
          },
          end: {
            line: 543,
            column: 96
          }
        },
        line: 543
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 8,
            column: 22
          },
          end: {
            line: 18,
            column: 3
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 8,
            column: 23
          },
          end: {
            line: 8,
            column: 27
          }
        }, {
          start: {
            line: 8,
            column: 31
          },
          end: {
            line: 8,
            column: 51
          }
        }, {
          start: {
            line: 8,
            column: 57
          },
          end: {
            line: 18,
            column: 2
          }
        }],
        line: 8
      },
      "1": {
        loc: {
          start: {
            line: 8,
            column: 57
          },
          end: {
            line: 18,
            column: 2
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 8,
            column: 74
          },
          end: {
            line: 15,
            column: 1
          }
        }, {
          start: {
            line: 15,
            column: 6
          },
          end: {
            line: 18,
            column: 1
          }
        }],
        line: 8
      },
      "2": {
        loc: {
          start: {
            line: 9,
            column: 4
          },
          end: {
            line: 9,
            column: 33
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 9,
            column: 4
          },
          end: {
            line: 9,
            column: 33
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 9
      },
      "3": {
        loc: {
          start: {
            line: 11,
            column: 4
          },
          end: {
            line: 13,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 11,
            column: 4
          },
          end: {
            line: 13,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 11
      },
      "4": {
        loc: {
          start: {
            line: 11,
            column: 8
          },
          end: {
            line: 11,
            column: 85
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 11,
            column: 8
          },
          end: {
            line: 11,
            column: 13
          }
        }, {
          start: {
            line: 11,
            column: 18
          },
          end: {
            line: 11,
            column: 84
          }
        }],
        line: 11
      },
      "5": {
        loc: {
          start: {
            line: 11,
            column: 18
          },
          end: {
            line: 11,
            column: 84
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 11,
            column: 34
          },
          end: {
            line: 11,
            column: 47
          }
        }, {
          start: {
            line: 11,
            column: 50
          },
          end: {
            line: 11,
            column: 84
          }
        }],
        line: 11
      },
      "6": {
        loc: {
          start: {
            line: 11,
            column: 50
          },
          end: {
            line: 11,
            column: 84
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 11,
            column: 50
          },
          end: {
            line: 11,
            column: 63
          }
        }, {
          start: {
            line: 11,
            column: 67
          },
          end: {
            line: 11,
            column: 84
          }
        }],
        line: 11
      },
      "7": {
        loc: {
          start: {
            line: 16,
            column: 4
          },
          end: {
            line: 16,
            column: 33
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 16,
            column: 4
          },
          end: {
            line: 16,
            column: 33
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 16
      },
      "8": {
        loc: {
          start: {
            line: 19,
            column: 25
          },
          end: {
            line: 23,
            column: 2
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 19,
            column: 26
          },
          end: {
            line: 19,
            column: 30
          }
        }, {
          start: {
            line: 19,
            column: 34
          },
          end: {
            line: 19,
            column: 57
          }
        }, {
          start: {
            line: 19,
            column: 63
          },
          end: {
            line: 23,
            column: 1
          }
        }],
        line: 19
      },
      "9": {
        loc: {
          start: {
            line: 19,
            column: 63
          },
          end: {
            line: 23,
            column: 1
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 19,
            column: 80
          },
          end: {
            line: 21,
            column: 1
          }
        }, {
          start: {
            line: 21,
            column: 5
          },
          end: {
            line: 23,
            column: 1
          }
        }],
        line: 19
      },
      "10": {
        loc: {
          start: {
            line: 24,
            column: 19
          },
          end: {
            line: 40,
            column: 4
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 24,
            column: 20
          },
          end: {
            line: 24,
            column: 24
          }
        }, {
          start: {
            line: 24,
            column: 28
          },
          end: {
            line: 24,
            column: 45
          }
        }, {
          start: {
            line: 24,
            column: 50
          },
          end: {
            line: 40,
            column: 4
          }
        }],
        line: 24
      },
      "11": {
        loc: {
          start: {
            line: 26,
            column: 18
          },
          end: {
            line: 30,
            column: 9
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 26,
            column: 18
          },
          end: {
            line: 26,
            column: 44
          }
        }, {
          start: {
            line: 26,
            column: 48
          },
          end: {
            line: 30,
            column: 9
          }
        }],
        line: 26
      },
      "12": {
        loc: {
          start: {
            line: 28,
            column: 29
          },
          end: {
            line: 28,
            column: 95
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 28,
            column: 29
          },
          end: {
            line: 28,
            column: 95
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 28
      },
      "13": {
        loc: {
          start: {
            line: 34,
            column: 8
          },
          end: {
            line: 34,
            column: 46
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 34,
            column: 8
          },
          end: {
            line: 34,
            column: 46
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 34
      },
      "14": {
        loc: {
          start: {
            line: 34,
            column: 12
          },
          end: {
            line: 34,
            column: 33
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 34,
            column: 12
          },
          end: {
            line: 34,
            column: 15
          }
        }, {
          start: {
            line: 34,
            column: 19
          },
          end: {
            line: 34,
            column: 33
          }
        }],
        line: 34
      },
      "15": {
        loc: {
          start: {
            line: 36,
            column: 8
          },
          end: {
            line: 36,
            column: 137
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 36,
            column: 8
          },
          end: {
            line: 36,
            column: 137
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 36
      },
      "16": {
        loc: {
          start: {
            line: 36,
            column: 78
          },
          end: {
            line: 36,
            column: 137
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 36,
            column: 78
          },
          end: {
            line: 36,
            column: 137
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 36
      },
      "17": {
        loc: {
          start: {
            line: 85,
            column: 29
          },
          end: {
            line: 85,
            column: 87
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 85,
            column: 55
          },
          end: {
            line: 85,
            column: 69
          }
        }, {
          start: {
            line: 85,
            column: 72
          },
          end: {
            line: 85,
            column: 87
          }
        }],
        line: 85
      },
      "18": {
        loc: {
          start: {
            line: 143,
            column: 39
          },
          end: {
            line: 143,
            column: 68
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 143,
            column: 49
          },
          end: {
            line: 143,
            column: 68
          }
        }],
        line: 143
      },
      "19": {
        loc: {
          start: {
            line: 148,
            column: 29
          },
          end: {
            line: 148,
            column: 87
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 148,
            column: 55
          },
          end: {
            line: 148,
            column: 69
          }
        }, {
          start: {
            line: 148,
            column: 72
          },
          end: {
            line: 148,
            column: 87
          }
        }],
        line: 148
      },
      "20": {
        loc: {
          start: {
            line: 167,
            column: 29
          },
          end: {
            line: 167,
            column: 87
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 167,
            column: 55
          },
          end: {
            line: 167,
            column: 69
          }
        }, {
          start: {
            line: 167,
            column: 72
          },
          end: {
            line: 167,
            column: 87
          }
        }],
        line: 167
      },
      "21": {
        loc: {
          start: {
            line: 185,
            column: 29
          },
          end: {
            line: 185,
            column: 87
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 185,
            column: 55
          },
          end: {
            line: 185,
            column: 69
          }
        }, {
          start: {
            line: 185,
            column: 72
          },
          end: {
            line: 185,
            column: 87
          }
        }],
        line: 185
      },
      "22": {
        loc: {
          start: {
            line: 200,
            column: 4
          },
          end: {
            line: 202,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 200,
            column: 4
          },
          end: {
            line: 202,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 200
      },
      "23": {
        loc: {
          start: {
            line: 209,
            column: 4
          },
          end: {
            line: 211,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 209,
            column: 4
          },
          end: {
            line: 211,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 209
      },
      "24": {
        loc: {
          start: {
            line: 222,
            column: 4
          },
          end: {
            line: 224,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 222,
            column: 4
          },
          end: {
            line: 224,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 222
      },
      "25": {
        loc: {
          start: {
            line: 226,
            column: 8
          },
          end: {
            line: 228,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 226,
            column: 8
          },
          end: {
            line: 228,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 226
      },
      "26": {
        loc: {
          start: {
            line: 237,
            column: 11
          },
          end: {
            line: 237,
            column: 90
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 237,
            column: 40
          },
          end: {
            line: 237,
            column: 49
          }
        }, {
          start: {
            line: 237,
            column: 52
          },
          end: {
            line: 237,
            column: 90
          }
        }],
        line: 237
      },
      "27": {
        loc: {
          start: {
            line: 287,
            column: 4
          },
          end: {
            line: 295,
            column: 5
          }
        },
        type: "switch",
        locations: [{
          start: {
            line: 288,
            column: 8
          },
          end: {
            line: 289,
            column: 24
          }
        }, {
          start: {
            line: 290,
            column: 8
          },
          end: {
            line: 291,
            column: 26
          }
        }, {
          start: {
            line: 292,
            column: 8
          },
          end: {
            line: 294,
            column: 68
          }
        }],
        line: 287
      },
      "28": {
        loc: {
          start: {
            line: 312,
            column: 17
          },
          end: {
            line: 312,
            column: 31
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 312,
            column: 17
          },
          end: {
            line: 312,
            column: 24
          }
        }, {
          start: {
            line: 312,
            column: 28
          },
          end: {
            line: 312,
            column: 31
          }
        }],
        line: 312
      },
      "29": {
        loc: {
          start: {
            line: 330,
            column: 11
          },
          end: {
            line: 330,
            column: 68
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 330,
            column: 40
          },
          end: {
            line: 330,
            column: 47
          }
        }, {
          start: {
            line: 330,
            column: 50
          },
          end: {
            line: 330,
            column: 68
          }
        }],
        line: 330
      },
      "30": {
        loc: {
          start: {
            line: 362,
            column: 29
          },
          end: {
            line: 362,
            column: 87
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 362,
            column: 55
          },
          end: {
            line: 362,
            column: 69
          }
        }, {
          start: {
            line: 362,
            column: 72
          },
          end: {
            line: 362,
            column: 87
          }
        }],
        line: 362
      },
      "31": {
        loc: {
          start: {
            line: 380,
            column: 29
          },
          end: {
            line: 380,
            column: 87
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 380,
            column: 55
          },
          end: {
            line: 380,
            column: 69
          }
        }, {
          start: {
            line: 380,
            column: 72
          },
          end: {
            line: 380,
            column: 87
          }
        }],
        line: 380
      },
      "32": {
        loc: {
          start: {
            line: 396,
            column: 17
          },
          end: {
            line: 396,
            column: 31
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 396,
            column: 17
          },
          end: {
            line: 396,
            column: 24
          }
        }, {
          start: {
            line: 396,
            column: 28
          },
          end: {
            line: 396,
            column: 31
          }
        }],
        line: 396
      },
      "33": {
        loc: {
          start: {
            line: 398,
            column: 53
          },
          end: {
            line: 398,
            column: 112
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 398,
            column: 53
          },
          end: {
            line: 398,
            column: 69
          }
        }, {
          start: {
            line: 398,
            column: 73
          },
          end: {
            line: 398,
            column: 94
          }
        }, {
          start: {
            line: 398,
            column: 98
          },
          end: {
            line: 398,
            column: 112
          }
        }],
        line: 398
      },
      "34": {
        loc: {
          start: {
            line: 409,
            column: 4
          },
          end: {
            line: 414,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 409,
            column: 4
          },
          end: {
            line: 414,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 409
      },
      "35": {
        loc: {
          start: {
            line: 415,
            column: 31
          },
          end: {
            line: 415,
            column: 45
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 415,
            column: 31
          },
          end: {
            line: 415,
            column: 39
          }
        }, {
          start: {
            line: 415,
            column: 43
          },
          end: {
            line: 415,
            column: 45
          }
        }],
        line: 415
      },
      "36": {
        loc: {
          start: {
            line: 416,
            column: 24
          },
          end: {
            line: 416,
            column: 38
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 416,
            column: 24
          },
          end: {
            line: 416,
            column: 32
          }
        }, {
          start: {
            line: 416,
            column: 36
          },
          end: {
            line: 416,
            column: 38
          }
        }],
        line: 416
      },
      "37": {
        loc: {
          start: {
            line: 422,
            column: 8
          },
          end: {
            line: 423,
            column: 21
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 422,
            column: 8
          },
          end: {
            line: 423,
            column: 21
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 422
      },
      "38": {
        loc: {
          start: {
            line: 422,
            column: 12
          },
          end: {
            line: 422,
            column: 47
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 422,
            column: 12
          },
          end: {
            line: 422,
            column: 20
          }
        }, {
          start: {
            line: 422,
            column: 24
          },
          end: {
            line: 422,
            column: 47
          }
        }],
        line: 422
      },
      "39": {
        loc: {
          start: {
            line: 425,
            column: 8
          },
          end: {
            line: 426,
            column: 21
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 425,
            column: 8
          },
          end: {
            line: 426,
            column: 21
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 425
      },
      "40": {
        loc: {
          start: {
            line: 469,
            column: 8
          },
          end: {
            line: 478,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 469,
            column: 8
          },
          end: {
            line: 478,
            column: 9
          }
        }, {
          start: {
            line: 476,
            column: 13
          },
          end: {
            line: 478,
            column: 9
          }
        }],
        line: 469
      },
      "41": {
        loc: {
          start: {
            line: 494,
            column: 8
          },
          end: {
            line: 502,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 494,
            column: 8
          },
          end: {
            line: 502,
            column: 9
          }
        }, {
          start: {
            line: 497,
            column: 13
          },
          end: {
            line: 502,
            column: 9
          }
        }],
        line: 494
      },
      "42": {
        loc: {
          start: {
            line: 497,
            column: 13
          },
          end: {
            line: 502,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 497,
            column: 13
          },
          end: {
            line: 502,
            column: 9
          }
        }, {
          start: {
            line: 500,
            column: 13
          },
          end: {
            line: 502,
            column: 9
          }
        }],
        line: 497
      },
      "43": {
        loc: {
          start: {
            line: 505,
            column: 29
          },
          end: {
            line: 505,
            column: 87
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 505,
            column: 55
          },
          end: {
            line: 505,
            column: 69
          }
        }, {
          start: {
            line: 505,
            column: 72
          },
          end: {
            line: 505,
            column: 87
          }
        }],
        line: 505
      },
      "44": {
        loc: {
          start: {
            line: 526,
            column: 29
          },
          end: {
            line: 526,
            column: 87
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 526,
            column: 55
          },
          end: {
            line: 526,
            column: 69
          }
        }, {
          start: {
            line: 526,
            column: 72
          },
          end: {
            line: 526,
            column: 87
          }
        }],
        line: 526
      },
      "45": {
        loc: {
          start: {
            line: 546,
            column: 29
          },
          end: {
            line: 546,
            column: 87
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 546,
            column: 55
          },
          end: {
            line: 546,
            column: 69
          }
        }, {
          start: {
            line: 546,
            column: 72
          },
          end: {
            line: 546,
            column: 87
          }
        }],
        line: 546
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0,
      "104": 0,
      "105": 0,
      "106": 0,
      "107": 0,
      "108": 0,
      "109": 0,
      "110": 0,
      "111": 0,
      "112": 0,
      "113": 0,
      "114": 0,
      "115": 0,
      "116": 0,
      "117": 0,
      "118": 0,
      "119": 0,
      "120": 0,
      "121": 0,
      "122": 0,
      "123": 0,
      "124": 0,
      "125": 0,
      "126": 0,
      "127": 0,
      "128": 0,
      "129": 0,
      "130": 0,
      "131": 0,
      "132": 0,
      "133": 0,
      "134": 0,
      "135": 0,
      "136": 0,
      "137": 0,
      "138": 0,
      "139": 0,
      "140": 0,
      "141": 0,
      "142": 0,
      "143": 0,
      "144": 0,
      "145": 0,
      "146": 0,
      "147": 0,
      "148": 0,
      "149": 0,
      "150": 0,
      "151": 0,
      "152": 0,
      "153": 0,
      "154": 0,
      "155": 0,
      "156": 0,
      "157": 0,
      "158": 0,
      "159": 0,
      "160": 0,
      "161": 0,
      "162": 0,
      "163": 0,
      "164": 0,
      "165": 0,
      "166": 0,
      "167": 0,
      "168": 0,
      "169": 0,
      "170": 0,
      "171": 0,
      "172": 0,
      "173": 0,
      "174": 0,
      "175": 0,
      "176": 0,
      "177": 0,
      "178": 0,
      "179": 0,
      "180": 0,
      "181": 0,
      "182": 0,
      "183": 0,
      "184": 0,
      "185": 0,
      "186": 0,
      "187": 0,
      "188": 0,
      "189": 0,
      "190": 0,
      "191": 0,
      "192": 0,
      "193": 0,
      "194": 0,
      "195": 0,
      "196": 0,
      "197": 0,
      "198": 0,
      "199": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0
    },
    b: {
      "0": [0, 0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0, 0],
      "9": [0, 0],
      "10": [0, 0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0, 0],
      "24": [0, 0],
      "25": [0, 0],
      "26": [0, 0],
      "27": [0, 0, 0],
      "28": [0, 0],
      "29": [0, 0],
      "30": [0, 0],
      "31": [0, 0],
      "32": [0, 0],
      "33": [0, 0, 0],
      "34": [0, 0],
      "35": [0, 0],
      "36": [0, 0],
      "37": [0, 0],
      "38": [0, 0],
      "39": [0, 0],
      "40": [0, 0],
      "41": [0, 0],
      "42": [0, 0],
      "43": [0, 0],
      "44": [0, 0],
      "45": [0, 0]
    },
    inputSourceMap: {
      file: "/workspace/src/utils.ts",
      mappings: "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",
      names: [],
      sources: ["/workspace/src/utils.ts"],
      sourcesContent: ["/**\n * Helper Functions for File Operations\n *\n * This file contains utility functions for file system operations,\n * path manipulation, and other common tasks used by the CLI\n */\n\nimport * as fs from 'fs-extra';\nimport * as path from 'path';\nimport { FileSystemError, Assistant, TemplateFormat } from './types';\n\n/**\n * Create a directory recursively if it doesn't exist\n * @param dirPath - The directory path to create\n * @throws FileSystemError if directory creation fails\n */\nexport async function ensureDir(dirPath: string): Promise<void> {\n  try {\n    await fs.ensureDir(dirPath);\n  } catch (_error) {\n    const errorMessage = _error instanceof Error ? _error.message : 'Unknown error';\n    throw new FileSystemError(`Failed to create directory: ${dirPath}`, {\n      originalError: errorMessage,\n      path: dirPath,\n    });\n  }\n}\n\n/**\n * Check if a directory exists\n * @param dirPath - The directory path to check\n * @returns Promise<boolean> - True if directory exists, false otherwise\n */\nexport async function directoryExists(dirPath: string): Promise<boolean> {\n  try {\n    const stats = await fs.stat(dirPath);\n    return stats.isDirectory();\n  } catch (_error) {\n    // If file doesn't exist or any other error, return false\n    return false;\n  }\n}\n\n/**\n * Check if a file exists\n * @param filePath - The file path to check\n * @returns Promise<boolean> - True if file exists, false otherwise\n */\nexport async function fileExists(filePath: string): Promise<boolean> {\n  try {\n    const stats = await fs.stat(filePath);\n    return stats.isFile();\n  } catch (_error) {\n    // If file doesn't exist or any other error, return false\n    return false;\n  }\n}\n\n/**\n * Check if a file or directory exists (generic)\n * @param filepath - The path to check\n * @returns Promise<boolean> - True if path exists, false otherwise\n */\nexport async function exists(filepath: string): Promise<boolean> {\n  try {\n    await fs.access(filepath);\n    return true;\n  } catch {\n    return false;\n  }\n}\n\n/**\n * Copy a file or directory from source to destination\n * @param src - Source path (file or directory)\n * @param dest - Destination path\n * @param options - Copy options\n * @throws FileSystemError if copy operation fails\n */\nexport async function copyTemplate(\n  src: string,\n  dest: string,\n  options: { overwrite?: boolean } = { overwrite: true }\n): Promise<void> {\n  try {\n    await fs.copy(src, dest, options);\n  } catch (_error) {\n    const errorMessage = _error instanceof Error ? _error.message : 'Unknown error';\n    throw new FileSystemError(`Failed to copy from ${src} to ${dest}`, {\n      originalError: errorMessage,\n      source: src,\n      destination: dest,\n    });\n  }\n}\n\n/**\n * Write JSON data to a file with proper formatting\n * @param filePath - The file path to write to\n * @param data - The data to write as JSON\n * @throws FileSystemError if write operation fails\n */\nexport async function writeJsonFile(filePath: string, data: unknown): Promise<void> {\n  try {\n    await fs.writeJson(filePath, data, { spaces: 2 });\n  } catch (_error) {\n    const errorMessage = _error instanceof Error ? _error.message : 'Unknown error';\n    throw new FileSystemError(`Failed to write JSON file: ${filePath}`, {\n      originalError: errorMessage,\n      path: filePath,\n    });\n  }\n}\n\n/**\n * Read and parse a JSON file\n * @param filePath - The file path to read from\n * @returns The parsed JSON data\n * @throws FileSystemError if read operation fails\n */\nexport async function readJsonFile<T = unknown>(filePath: string): Promise<T> {\n  try {\n    return await fs.readJson(filePath);\n  } catch (_error) {\n    const errorMessage = _error instanceof Error ? _error.message : 'Unknown error';\n    throw new FileSystemError(`Failed to read JSON file: ${filePath}`, {\n      originalError: errorMessage,\n      path: filePath,\n    });\n  }\n}\n\n/**\n * Parse comma-separated assistant values into an array\n * @param value - Comma-separated string of assistant names\n * @returns Array of assistant names\n * @throws Error if invalid assistant names are provided\n */\nexport function parseAssistants(value: string): Assistant[] {\n  const validAssistants: Assistant[] = ['claude', 'gemini'];\n\n  if (!value.trim()) {\n    throw new Error('Assistants parameter cannot be empty');\n  }\n\n  const assistants = value\n    .split(',')\n    .map(a => a.trim().toLowerCase())\n    .filter(a => a.length > 0);\n\n  // Validate that all assistants are valid\n  const invalidAssistants = assistants.filter(\n    (assistant): assistant is string => !validAssistants.includes(assistant as Assistant)\n  );\n\n  if (invalidAssistants.length > 0) {\n    throw new Error(\n      `Invalid assistant(s): ${invalidAssistants.join(', ')}. Valid options are: ${validAssistants.join(', ')}`\n    );\n  }\n\n  // Remove duplicates and return\n  return Array.from(new Set(assistants)) as Assistant[];\n}\n\n/**\n * Validate that all assistants are supported\n * @param assistants - Array of assistants to validate\n * @throws Error if any assistant is invalid or array is empty\n */\nexport function validateAssistants(assistants: Assistant[]): void {\n  const validAssistants: Assistant[] = ['claude', 'gemini'];\n\n  if (assistants.length === 0) {\n    throw new Error('At least one assistant must be specified');\n  }\n\n  for (const assistant of assistants) {\n    if (!validAssistants.includes(assistant)) {\n      throw new Error(\n        `Invalid assistant: ${assistant}. Supported assistants: ${validAssistants.join(', ')}`\n      );\n    }\n  }\n}\n\n/**\n * Get the absolute path for a given path, resolving it relative to the current working directory\n * @param inputPath - The input path (can be relative or absolute)\n * @returns The absolute path\n */\nexport function getAbsolutePath(inputPath: string): string {\n  return path.isAbsolute(inputPath) ? inputPath : path.resolve(process.cwd(), inputPath);\n}\n\n/**\n * Get the relative path from one path to another\n * @param from - The source path\n * @param to - The target path\n * @returns The relative path\n */\nexport function getRelativePath(from: string, to: string): string {\n  return path.relative(from, to);\n}\n\n/**\n * Join multiple path segments into a single path\n * @param segments - Path segments to join\n * @returns The joined path\n */\nexport function joinPath(...segments: string[]): string {\n  return path.join(...segments);\n}\n\n/**\n * Get the directory name from a file path\n * @param filePath - The file path\n * @returns The directory name\n */\nexport function getDirName(filePath: string): string {\n  return path.dirname(filePath);\n}\n\n/**\n * Get the base name (filename) from a file path\n * @param filePath - The file path\n * @param ext - Optional extension to remove\n * @returns The base name\n */\nexport function getBaseName(filePath: string, ext?: string): string {\n  return path.basename(filePath, ext);\n}\n\n/**\n * Get the file extension from a file path\n * @param filePath - The file path\n * @returns The file extension (including the dot)\n */\nexport function getExtension(filePath: string): string {\n  return path.extname(filePath);\n}\n\n/**\n * Get the template format for a specific assistant\n * @param assistant - The assistant type\n * @returns The template format to use ('md' for Claude, 'toml' for Gemini)\n */\nexport function getTemplateFormat(assistant: Assistant): TemplateFormat {\n  switch (assistant) {\n    case 'claude':\n      return 'md';\n    case 'gemini':\n      return 'toml';\n    default:\n      // This should never happen due to type safety, but adding for completeness\n      throw new Error(`Unknown assistant type: ${assistant}`);\n  }\n}\n\n/**\n * Get the absolute path to a template file\n * @param templateFile - The template filename\n * @returns The absolute path to the template\n */\nexport function getTemplatePath(templateFile: string): string {\n  return path.join(__dirname, '..', 'templates', templateFile);\n}\n\n/**\n * Get list of directories that will be created for given assistants\n * @param assistants - Array of assistants\n * @param baseDir - Base directory to resolve paths against (defaults to current directory)\n * @returns Array of directory paths to create\n */\nexport function getCreatedDirectories(assistants: Assistant[], baseDir?: string): string[] {\n  const base = baseDir || '.';\n  const dirs: string[] = [\n    resolvePath(base, '.ai/task-manager'),\n    resolvePath(base, '.ai/task-manager/plans'),\n  ];\n\n  for (const assistant of assistants) {\n    dirs.push(resolvePath(base, `.${assistant}`));\n    dirs.push(resolvePath(base, `.${assistant}/commands`));\n    dirs.push(resolvePath(base, `.${assistant}/commands/tasks`));\n  }\n\n  return dirs;\n}\n\n/**\n * Ensure a directory path ends with a path separator\n * @param dirPath - The directory path\n * @returns The directory path with trailing separator\n */\nexport function ensureTrailingSlash(dirPath: string): string {\n  return dirPath.endsWith(path.sep) ? dirPath : dirPath + path.sep;\n}\n\n/**\n * Create a safe filename by removing or replacing invalid characters\n * @param filename - The input filename\n * @returns A safe filename for the current platform\n */\nexport function sanitizeFilename(filename: string): string {\n  // Replace invalid characters with underscores\n  return filename\n    .replace(/[<>:\"/\\\\|?*]/g, '_')\n    .replace(/\\s+/g, '_')\n    .replace(/_+/g, '_')\n    .replace(/^_|_$/g, '');\n}\n\n/**\n * Get the home directory path\n * @returns The user's home directory path\n */\nexport function getHomeDirectory(): string {\n  return require('os').homedir();\n}\n\n/**\n * Remove a file or directory recursively\n * @param targetPath - The path to remove\n * @throws FileSystemError if removal fails\n */\nexport async function remove(targetPath: string): Promise<void> {\n  try {\n    await fs.remove(targetPath);\n  } catch (_error) {\n    const errorMessage = _error instanceof Error ? _error.message : 'Unknown error';\n    throw new FileSystemError(`Failed to remove: ${targetPath}`, {\n      originalError: errorMessage,\n      path: targetPath,\n    });\n  }\n}\n\n/**\n * Move a file or directory from source to destination\n * @param src - Source path\n * @param dest - Destination path\n * @throws FileSystemError if move operation fails\n */\nexport async function move(src: string, dest: string): Promise<void> {\n  try {\n    await fs.move(src, dest);\n  } catch (_error) {\n    const errorMessage = _error instanceof Error ? _error.message : 'Unknown error';\n    throw new FileSystemError(`Failed to move from ${src} to ${dest}`, {\n      originalError: errorMessage,\n      source: src,\n      destination: dest,\n    });\n  }\n}\n\n/**\n * Resolve path segments relative to a base directory with cross-platform compatibility\n * @param baseDir - The base directory (defaults to '.' if not provided, null, or undefined)\n * @param segments - Additional path segments to resolve\n * @returns The resolved absolute path\n */\nexport function resolvePath(baseDir: string | undefined, ...segments: string[]): string {\n  // Handle edge cases: null, undefined, or empty strings\n  const base = baseDir || '.';\n\n  // Filter out any null, undefined, or empty string segments\n  const validSegments = segments.filter(\n    segment => segment !== null && segment !== undefined && segment !== ''\n  );\n\n  return path.resolve(base, ...validSegments);\n}\n\n/**\n * Interface for parsed markdown frontmatter\n */\nexport interface MarkdownFrontmatter {\n  [key: string]: unknown;\n}\n\n/**\n * Parse YAML frontmatter from markdown content\n * @param content - The markdown content with frontmatter\n * @returns Object containing frontmatter and body content\n */\nexport function parseFrontmatter(content: string): {\n  frontmatter: MarkdownFrontmatter;\n  body: string;\n} {\n  const frontmatterRegex = /^---\\r?\\n([\\s\\S]*?)\\r?\\n---(?:\\r?\\n([\\s\\S]*))?$/;\n  const match = content.match(frontmatterRegex);\n\n  if (!match) {\n    return {\n      frontmatter: {},\n      body: content,\n    };\n  }\n\n  const frontmatterContent = match[1] || '';\n  const bodyContent = match[2] || ''; // match[2] is now undefined when no body exists\n\n  // Simple YAML parser for our specific use case\n  const frontmatter: MarkdownFrontmatter = {};\n  const lines = frontmatterContent.split('\\n');\n\n  for (const line of lines) {\n    const trimmed = line.trim();\n    if (!trimmed || trimmed.startsWith('#')) continue;\n\n    const colonIndex = trimmed.indexOf(':');\n    if (colonIndex === -1) continue;\n\n    const key = trimmed.substring(0, colonIndex).trim();\n    const value = trimmed.substring(colonIndex + 1).trim();\n\n    // Remove quotes if present\n    frontmatter[key] = value.replace(/^[\"']|[\"']$/g, '');\n  }\n\n  return {\n    frontmatter,\n    body: bodyContent,\n  };\n}\n\n/**\n * Escape a string for TOML format\n * @param str - The string to escape\n * @returns The escaped string suitable for TOML\n */\nexport function escapeTomlString(str: string): string {\n  return str\n    .replace(/\\\\/g, '\\\\\\\\')\n    .replace(/\"/g, '\\\\\"')\n    .replace(/\\n/g, '\\\\n')\n    .replace(/\\r/g, '\\\\r')\n    .replace(/\\t/g, '\\\\t');\n}\n\n/**\n * Convert markdown template content to TOML format for Gemini\n * @param mdContent - The markdown template content\n * @returns The converted TOML content\n */\nexport function convertMdToToml(mdContent: string): string {\n  const { frontmatter, body } = parseFrontmatter(mdContent);\n\n  // Process the body content for Gemini format\n  const processedBody = body\n    // Transform $ARGUMENTS \u2192 {{args}} (not followed by alphanumeric that would make it an identifier)\n    .replace(/\\$ARGUMENTS(?![0-9])/g, '{{args}}')\n    // Transform $1 \u2192 {{plan_id}} (exact match, not part of longer number)\n    .replace(/\\$1(?![0-9])/g, '{{plan_id}}')\n    .replace(/\\$2(?![0-9])/g, '{{param2}}')\n    .replace(/\\$3(?![0-9])/g, '{{param3}}');\n\n  // Build TOML content\n  let tomlContent = '[metadata]\\n';\n\n  // Add frontmatter fields to metadata section\n  for (const [key, value] of Object.entries(frontmatter)) {\n    if (key === 'argument-hint') {\n      // Special handling for argument-hint - convert to {{}} format\n      const convertedHint = String(value)\n        .replace(/\\[plan-ID\\]/g, '{{plan_id}}')\n        .replace(/\\[user-prompt\\]/g, '{{args}}');\n      tomlContent += `argument-hint = \"${escapeTomlString(convertedHint)}\"\\n`;\n    } else {\n      tomlContent += `${key} = \"${escapeTomlString(String(value))}\"\\n`;\n    }\n  }\n\n  // Add the prompt section with escaped content\n  tomlContent += '\\n[prompt]\\n';\n  tomlContent += `content = \"\"\"${escapeTomlString(processedBody)}\"\"\"\\n`;\n\n  return tomlContent;\n}\n\n/**\n * Read a markdown template file and optionally convert to TOML\n * @param templatePath - Path to the markdown template\n * @param targetFormat - Target format ('md' or 'toml')\n * @returns The template content in the requested format\n */\nexport async function readAndProcessTemplate(\n  templatePath: string,\n  targetFormat: TemplateFormat\n): Promise<string> {\n  try {\n    const mdContent = await fs.readFile(templatePath, 'utf-8');\n\n    if (targetFormat === 'md') {\n      return mdContent;\n    } else if (targetFormat === 'toml') {\n      return convertMdToToml(mdContent);\n    } else {\n      throw new Error(`Unsupported template format: ${targetFormat}`);\n    }\n  } catch (_error) {\n    const errorMessage = _error instanceof Error ? _error.message : 'Unknown error';\n    throw new FileSystemError(`Failed to read and process template: ${templatePath}`, {\n      originalError: errorMessage,\n      path: templatePath,\n      targetFormat,\n    });\n  }\n}\n\n/**\n * Write processed template content to destination\n * @param content - The template content to write\n * @param destPath - Destination file path\n */\nexport async function writeProcessedTemplate(content: string, destPath: string): Promise<void> {\n  try {\n    // Ensure destination directory exists\n    await fs.ensureDir(path.dirname(destPath));\n\n    // Write the content\n    await fs.writeFile(destPath, content, 'utf-8');\n  } catch (_error) {\n    const errorMessage = _error instanceof Error ? _error.message : 'Unknown error';\n    throw new FileSystemError(`Failed to write processed template: ${destPath}`, {\n      originalError: errorMessage,\n      path: destPath,\n    });\n  }\n}\n\n/**\n * Get the names of all markdown template files in a given subdirectory of templates.\n * @param templateSubdir - The subdirectory within templates (e.g., 'commands/tasks')\n * @returns An array of template names (filenames without .md extension)\n * @throws FileSystemError if the directory cannot be read\n */\nexport async function getMarkdownTemplateNames(templateSubdir: string): Promise<string[]> {\n  const fullPath = path.join(__dirname, '..', 'templates', templateSubdir);\n  try {\n    const files = await fs.readdir(fullPath);\n    return files.filter(file => file.endsWith('.md')).map(file => path.basename(file, '.md'));\n  } catch (_error) {\n    const errorMessage = _error instanceof Error ? _error.message : 'Unknown error';\n    throw new FileSystemError(`Failed to read template directory: ${fullPath}`, {\n      originalError: errorMessage,\n      path: fullPath,\n    });\n  }\n}\n"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "cbea0063136cb374928b421546a739f3d0e3358b"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_grkb1stoa = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_grkb1stoa();
var __createBinding =
/* istanbul ignore next */
(cov_grkb1stoa().s[0]++,
/* istanbul ignore next */
(cov_grkb1stoa().b[0][0]++, this) &&
/* istanbul ignore next */
(cov_grkb1stoa().b[0][1]++, this.__createBinding) ||
/* istanbul ignore next */
(cov_grkb1stoa().b[0][2]++, Object.create ?
/* istanbul ignore next */
(cov_grkb1stoa().b[1][0]++, function (o, m, k, k2) {
  /* istanbul ignore next */
  cov_grkb1stoa().f[0]++;
  cov_grkb1stoa().s[1]++;
  if (k2 === undefined) {
    /* istanbul ignore next */
    cov_grkb1stoa().b[2][0]++;
    cov_grkb1stoa().s[2]++;
    k2 = k;
  } else
  /* istanbul ignore next */
  {
    cov_grkb1stoa().b[2][1]++;
  }
  var desc =
  /* istanbul ignore next */
  (cov_grkb1stoa().s[3]++, Object.getOwnPropertyDescriptor(m, k));
  /* istanbul ignore next */
  cov_grkb1stoa().s[4]++;
  if (
  /* istanbul ignore next */
  (cov_grkb1stoa().b[4][0]++, !desc) ||
  /* istanbul ignore next */
  (cov_grkb1stoa().b[4][1]++, "get" in desc ?
  /* istanbul ignore next */
  (cov_grkb1stoa().b[5][0]++, !m.__esModule) :
  /* istanbul ignore next */
  (cov_grkb1stoa().b[5][1]++,
  /* istanbul ignore next */
  (cov_grkb1stoa().b[6][0]++, desc.writable) ||
  /* istanbul ignore next */
  (cov_grkb1stoa().b[6][1]++, desc.configurable)))) {
    /* istanbul ignore next */
    cov_grkb1stoa().b[3][0]++;
    cov_grkb1stoa().s[5]++;
    desc = {
      enumerable: true,
      get: function () {
        /* istanbul ignore next */
        cov_grkb1stoa().f[1]++;
        cov_grkb1stoa().s[6]++;
        return m[k];
      }
    };
  } else
  /* istanbul ignore next */
  {
    cov_grkb1stoa().b[3][1]++;
  }
  cov_grkb1stoa().s[7]++;
  Object.defineProperty(o, k2, desc);
}) :
/* istanbul ignore next */
(cov_grkb1stoa().b[1][1]++, function (o, m, k, k2) {
  /* istanbul ignore next */
  cov_grkb1stoa().f[2]++;
  cov_grkb1stoa().s[8]++;
  if (k2 === undefined) {
    /* istanbul ignore next */
    cov_grkb1stoa().b[7][0]++;
    cov_grkb1stoa().s[9]++;
    k2 = k;
  } else
  /* istanbul ignore next */
  {
    cov_grkb1stoa().b[7][1]++;
  }
  cov_grkb1stoa().s[10]++;
  o[k2] = m[k];
})));
var __setModuleDefault =
/* istanbul ignore next */
(cov_grkb1stoa().s[11]++,
/* istanbul ignore next */
(cov_grkb1stoa().b[8][0]++, this) &&
/* istanbul ignore next */
(cov_grkb1stoa().b[8][1]++, this.__setModuleDefault) ||
/* istanbul ignore next */
(cov_grkb1stoa().b[8][2]++, Object.create ?
/* istanbul ignore next */
(cov_grkb1stoa().b[9][0]++, function (o, v) {
  /* istanbul ignore next */
  cov_grkb1stoa().f[3]++;
  cov_grkb1stoa().s[12]++;
  Object.defineProperty(o, "default", {
    enumerable: true,
    value: v
  });
}) :
/* istanbul ignore next */
(cov_grkb1stoa().b[9][1]++, function (o, v) {
  /* istanbul ignore next */
  cov_grkb1stoa().f[4]++;
  cov_grkb1stoa().s[13]++;
  o["default"] = v;
})));
var __importStar =
/* istanbul ignore next */
(cov_grkb1stoa().s[14]++,
/* istanbul ignore next */
(cov_grkb1stoa().b[10][0]++, this) &&
/* istanbul ignore next */
(cov_grkb1stoa().b[10][1]++, this.__importStar) ||
/* istanbul ignore next */
(cov_grkb1stoa().b[10][2]++, function () {
  /* istanbul ignore next */
  cov_grkb1stoa().f[5]++;
  cov_grkb1stoa().s[15]++;
  var ownKeys = function (o) {
    /* istanbul ignore next */
    cov_grkb1stoa().f[6]++;
    cov_grkb1stoa().s[16]++;
    ownKeys =
    /* istanbul ignore next */
    (cov_grkb1stoa().b[11][0]++, Object.getOwnPropertyNames) ||
    /* istanbul ignore next */
    (cov_grkb1stoa().b[11][1]++, function (o) {
      /* istanbul ignore next */
      cov_grkb1stoa().f[7]++;
      var ar =
      /* istanbul ignore next */
      (cov_grkb1stoa().s[17]++, []);
      /* istanbul ignore next */
      cov_grkb1stoa().s[18]++;
      for (var k in o) {
        /* istanbul ignore next */
        cov_grkb1stoa().s[19]++;
        if (Object.prototype.hasOwnProperty.call(o, k)) {
          /* istanbul ignore next */
          cov_grkb1stoa().b[12][0]++;
          cov_grkb1stoa().s[20]++;
          ar[ar.length] = k;
        } else
        /* istanbul ignore next */
        {
          cov_grkb1stoa().b[12][1]++;
        }
      }
      /* istanbul ignore next */
      cov_grkb1stoa().s[21]++;
      return ar;
    });
    /* istanbul ignore next */
    cov_grkb1stoa().s[22]++;
    return ownKeys(o);
  };
  /* istanbul ignore next */
  cov_grkb1stoa().s[23]++;
  return function (mod) {
    /* istanbul ignore next */
    cov_grkb1stoa().f[8]++;
    cov_grkb1stoa().s[24]++;
    if (
    /* istanbul ignore next */
    (cov_grkb1stoa().b[14][0]++, mod) &&
    /* istanbul ignore next */
    (cov_grkb1stoa().b[14][1]++, mod.__esModule)) {
      /* istanbul ignore next */
      cov_grkb1stoa().b[13][0]++;
      cov_grkb1stoa().s[25]++;
      return mod;
    } else
    /* istanbul ignore next */
    {
      cov_grkb1stoa().b[13][1]++;
    }
    var result =
    /* istanbul ignore next */
    (cov_grkb1stoa().s[26]++, {});
    /* istanbul ignore next */
    cov_grkb1stoa().s[27]++;
    if (mod != null) {
      /* istanbul ignore next */
      cov_grkb1stoa().b[15][0]++;
      cov_grkb1stoa().s[28]++;
      for (var k =
        /* istanbul ignore next */
        (cov_grkb1stoa().s[29]++, ownKeys(mod)), i =
        /* istanbul ignore next */
        (cov_grkb1stoa().s[30]++, 0); i < k.length; i++) {
        /* istanbul ignore next */
        cov_grkb1stoa().s[31]++;
        if (k[i] !== "default") {
          /* istanbul ignore next */
          cov_grkb1stoa().b[16][0]++;
          cov_grkb1stoa().s[32]++;
          __createBinding(result, mod, k[i]);
        } else
        /* istanbul ignore next */
        {
          cov_grkb1stoa().b[16][1]++;
        }
      }
    } else
    /* istanbul ignore next */
    {
      cov_grkb1stoa().b[15][1]++;
    }
    cov_grkb1stoa().s[33]++;
    __setModuleDefault(result, mod);
    /* istanbul ignore next */
    cov_grkb1stoa().s[34]++;
    return result;
  };
}()));
/* istanbul ignore next */
cov_grkb1stoa().s[35]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_grkb1stoa().s[36]++;
exports.ensureDir = ensureDir;
/* istanbul ignore next */
cov_grkb1stoa().s[37]++;
exports.directoryExists = directoryExists;
/* istanbul ignore next */
cov_grkb1stoa().s[38]++;
exports.fileExists = fileExists;
/* istanbul ignore next */
cov_grkb1stoa().s[39]++;
exports.exists = exists;
/* istanbul ignore next */
cov_grkb1stoa().s[40]++;
exports.copyTemplate = copyTemplate;
/* istanbul ignore next */
cov_grkb1stoa().s[41]++;
exports.writeJsonFile = writeJsonFile;
/* istanbul ignore next */
cov_grkb1stoa().s[42]++;
exports.readJsonFile = readJsonFile;
/* istanbul ignore next */
cov_grkb1stoa().s[43]++;
exports.parseAssistants = parseAssistants;
/* istanbul ignore next */
cov_grkb1stoa().s[44]++;
exports.validateAssistants = validateAssistants;
/* istanbul ignore next */
cov_grkb1stoa().s[45]++;
exports.getAbsolutePath = getAbsolutePath;
/* istanbul ignore next */
cov_grkb1stoa().s[46]++;
exports.getRelativePath = getRelativePath;
/* istanbul ignore next */
cov_grkb1stoa().s[47]++;
exports.joinPath = joinPath;
/* istanbul ignore next */
cov_grkb1stoa().s[48]++;
exports.getDirName = getDirName;
/* istanbul ignore next */
cov_grkb1stoa().s[49]++;
exports.getBaseName = getBaseName;
/* istanbul ignore next */
cov_grkb1stoa().s[50]++;
exports.getExtension = getExtension;
/* istanbul ignore next */
cov_grkb1stoa().s[51]++;
exports.getTemplateFormat = getTemplateFormat;
/* istanbul ignore next */
cov_grkb1stoa().s[52]++;
exports.getTemplatePath = getTemplatePath;
/* istanbul ignore next */
cov_grkb1stoa().s[53]++;
exports.getCreatedDirectories = getCreatedDirectories;
/* istanbul ignore next */
cov_grkb1stoa().s[54]++;
exports.ensureTrailingSlash = ensureTrailingSlash;
/* istanbul ignore next */
cov_grkb1stoa().s[55]++;
exports.sanitizeFilename = sanitizeFilename;
/* istanbul ignore next */
cov_grkb1stoa().s[56]++;
exports.getHomeDirectory = getHomeDirectory;
/* istanbul ignore next */
cov_grkb1stoa().s[57]++;
exports.remove = remove;
/* istanbul ignore next */
cov_grkb1stoa().s[58]++;
exports.move = move;
/* istanbul ignore next */
cov_grkb1stoa().s[59]++;
exports.resolvePath = resolvePath;
/* istanbul ignore next */
cov_grkb1stoa().s[60]++;
exports.parseFrontmatter = parseFrontmatter;
/* istanbul ignore next */
cov_grkb1stoa().s[61]++;
exports.escapeTomlString = escapeTomlString;
/* istanbul ignore next */
cov_grkb1stoa().s[62]++;
exports.convertMdToToml = convertMdToToml;
/* istanbul ignore next */
cov_grkb1stoa().s[63]++;
exports.readAndProcessTemplate = readAndProcessTemplate;
/* istanbul ignore next */
cov_grkb1stoa().s[64]++;
exports.writeProcessedTemplate = writeProcessedTemplate;
/* istanbul ignore next */
cov_grkb1stoa().s[65]++;
exports.getMarkdownTemplateNames = getMarkdownTemplateNames;
const fs =
/* istanbul ignore next */
(cov_grkb1stoa().s[66]++, __importStar(require("fs-extra")));
const path =
/* istanbul ignore next */
(cov_grkb1stoa().s[67]++, __importStar(require("path")));
const types_1 =
/* istanbul ignore next */
(cov_grkb1stoa().s[68]++, require("./types"));
/**
 * Create a directory recursively if it doesn't exist
 * @param dirPath - The directory path to create
 * @throws FileSystemError if directory creation fails
 */
async function ensureDir(dirPath) {
  /* istanbul ignore next */
  cov_grkb1stoa().f[9]++;
  cov_grkb1stoa().s[69]++;
  try {
    /* istanbul ignore next */
    cov_grkb1stoa().s[70]++;
    await fs.ensureDir(dirPath);
  } catch (_error) {
    const errorMessage =
    /* istanbul ignore next */
    (cov_grkb1stoa().s[71]++, _error instanceof Error ?
    /* istanbul ignore next */
    (cov_grkb1stoa().b[17][0]++, _error.message) :
    /* istanbul ignore next */
    (cov_grkb1stoa().b[17][1]++, 'Unknown error'));
    /* istanbul ignore next */
    cov_grkb1stoa().s[72]++;
    throw new types_1.FileSystemError(`Failed to create directory: ${dirPath}`, {
      originalError: errorMessage,
      path: dirPath
    });
  }
}
/**
 * Check if a directory exists
 * @param dirPath - The directory path to check
 * @returns Promise<boolean> - True if directory exists, false otherwise
 */
async function directoryExists(dirPath) {
  /* istanbul ignore next */
  cov_grkb1stoa().f[10]++;
  cov_grkb1stoa().s[73]++;
  try {
    const stats =
    /* istanbul ignore next */
    (cov_grkb1stoa().s[74]++, await fs.stat(dirPath));
    /* istanbul ignore next */
    cov_grkb1stoa().s[75]++;
    return stats.isDirectory();
  } catch (_error) {
    /* istanbul ignore next */
    cov_grkb1stoa().s[76]++;
    // If file doesn't exist or any other error, return false
    return false;
  }
}
/**
 * Check if a file exists
 * @param filePath - The file path to check
 * @returns Promise<boolean> - True if file exists, false otherwise
 */
async function fileExists(filePath) {
  /* istanbul ignore next */
  cov_grkb1stoa().f[11]++;
  cov_grkb1stoa().s[77]++;
  try {
    const stats =
    /* istanbul ignore next */
    (cov_grkb1stoa().s[78]++, await fs.stat(filePath));
    /* istanbul ignore next */
    cov_grkb1stoa().s[79]++;
    return stats.isFile();
  } catch (_error) {
    /* istanbul ignore next */
    cov_grkb1stoa().s[80]++;
    // If file doesn't exist or any other error, return false
    return false;
  }
}
/**
 * Check if a file or directory exists (generic)
 * @param filepath - The path to check
 * @returns Promise<boolean> - True if path exists, false otherwise
 */
async function exists(filepath) {
  /* istanbul ignore next */
  cov_grkb1stoa().f[12]++;
  cov_grkb1stoa().s[81]++;
  try {
    /* istanbul ignore next */
    cov_grkb1stoa().s[82]++;
    await fs.access(filepath);
    /* istanbul ignore next */
    cov_grkb1stoa().s[83]++;
    return true;
  } catch {
    /* istanbul ignore next */
    cov_grkb1stoa().s[84]++;
    return false;
  }
}
/**
 * Copy a file or directory from source to destination
 * @param src - Source path (file or directory)
 * @param dest - Destination path
 * @param options - Copy options
 * @throws FileSystemError if copy operation fails
 */
async function copyTemplate(src, dest, options =
/* istanbul ignore next */
(cov_grkb1stoa().b[18][0]++, {
  overwrite: true
})) {
  /* istanbul ignore next */
  cov_grkb1stoa().f[13]++;
  cov_grkb1stoa().s[85]++;
  try {
    /* istanbul ignore next */
    cov_grkb1stoa().s[86]++;
    await fs.copy(src, dest, options);
  } catch (_error) {
    const errorMessage =
    /* istanbul ignore next */
    (cov_grkb1stoa().s[87]++, _error instanceof Error ?
    /* istanbul ignore next */
    (cov_grkb1stoa().b[19][0]++, _error.message) :
    /* istanbul ignore next */
    (cov_grkb1stoa().b[19][1]++, 'Unknown error'));
    /* istanbul ignore next */
    cov_grkb1stoa().s[88]++;
    throw new types_1.FileSystemError(`Failed to copy from ${src} to ${dest}`, {
      originalError: errorMessage,
      source: src,
      destination: dest
    });
  }
}
/**
 * Write JSON data to a file with proper formatting
 * @param filePath - The file path to write to
 * @param data - The data to write as JSON
 * @throws FileSystemError if write operation fails
 */
async function writeJsonFile(filePath, data) {
  /* istanbul ignore next */
  cov_grkb1stoa().f[14]++;
  cov_grkb1stoa().s[89]++;
  try {
    /* istanbul ignore next */
    cov_grkb1stoa().s[90]++;
    await fs.writeJson(filePath, data, {
      spaces: 2
    });
  } catch (_error) {
    const errorMessage =
    /* istanbul ignore next */
    (cov_grkb1stoa().s[91]++, _error instanceof Error ?
    /* istanbul ignore next */
    (cov_grkb1stoa().b[20][0]++, _error.message) :
    /* istanbul ignore next */
    (cov_grkb1stoa().b[20][1]++, 'Unknown error'));
    /* istanbul ignore next */
    cov_grkb1stoa().s[92]++;
    throw new types_1.FileSystemError(`Failed to write JSON file: ${filePath}`, {
      originalError: errorMessage,
      path: filePath
    });
  }
}
/**
 * Read and parse a JSON file
 * @param filePath - The file path to read from
 * @returns The parsed JSON data
 * @throws FileSystemError if read operation fails
 */
async function readJsonFile(filePath) {
  /* istanbul ignore next */
  cov_grkb1stoa().f[15]++;
  cov_grkb1stoa().s[93]++;
  try {
    /* istanbul ignore next */
    cov_grkb1stoa().s[94]++;
    return await fs.readJson(filePath);
  } catch (_error) {
    const errorMessage =
    /* istanbul ignore next */
    (cov_grkb1stoa().s[95]++, _error instanceof Error ?
    /* istanbul ignore next */
    (cov_grkb1stoa().b[21][0]++, _error.message) :
    /* istanbul ignore next */
    (cov_grkb1stoa().b[21][1]++, 'Unknown error'));
    /* istanbul ignore next */
    cov_grkb1stoa().s[96]++;
    throw new types_1.FileSystemError(`Failed to read JSON file: ${filePath}`, {
      originalError: errorMessage,
      path: filePath
    });
  }
}
/**
 * Parse comma-separated assistant values into an array
 * @param value - Comma-separated string of assistant names
 * @returns Array of assistant names
 * @throws Error if invalid assistant names are provided
 */
function parseAssistants(value) {
  /* istanbul ignore next */
  cov_grkb1stoa().f[16]++;
  const validAssistants =
  /* istanbul ignore next */
  (cov_grkb1stoa().s[97]++, ['claude', 'gemini']);
  /* istanbul ignore next */
  cov_grkb1stoa().s[98]++;
  if (!value.trim()) {
    /* istanbul ignore next */
    cov_grkb1stoa().b[22][0]++;
    cov_grkb1stoa().s[99]++;
    throw new Error('Assistants parameter cannot be empty');
  } else
  /* istanbul ignore next */
  {
    cov_grkb1stoa().b[22][1]++;
  }
  const assistants =
  /* istanbul ignore next */
  (cov_grkb1stoa().s[100]++, value.split(',').map(a => {
    /* istanbul ignore next */
    cov_grkb1stoa().f[17]++;
    cov_grkb1stoa().s[101]++;
    return a.trim().toLowerCase();
  }).filter(a => {
    /* istanbul ignore next */
    cov_grkb1stoa().f[18]++;
    cov_grkb1stoa().s[102]++;
    return a.length > 0;
  }));
  // Validate that all assistants are valid
  const invalidAssistants =
  /* istanbul ignore next */
  (cov_grkb1stoa().s[103]++, assistants.filter(assistant => {
    /* istanbul ignore next */
    cov_grkb1stoa().f[19]++;
    cov_grkb1stoa().s[104]++;
    return !validAssistants.includes(assistant);
  }));
  /* istanbul ignore next */
  cov_grkb1stoa().s[105]++;
  if (invalidAssistants.length > 0) {
    /* istanbul ignore next */
    cov_grkb1stoa().b[23][0]++;
    cov_grkb1stoa().s[106]++;
    throw new Error(`Invalid assistant(s): ${invalidAssistants.join(', ')}. Valid options are: ${validAssistants.join(', ')}`);
  } else
  /* istanbul ignore next */
  {
    cov_grkb1stoa().b[23][1]++;
  }
  // Remove duplicates and return
  cov_grkb1stoa().s[107]++;
  return Array.from(new Set(assistants));
}
/**
 * Validate that all assistants are supported
 * @param assistants - Array of assistants to validate
 * @throws Error if any assistant is invalid or array is empty
 */
function validateAssistants(assistants) {
  /* istanbul ignore next */
  cov_grkb1stoa().f[20]++;
  const validAssistants =
  /* istanbul ignore next */
  (cov_grkb1stoa().s[108]++, ['claude', 'gemini']);
  /* istanbul ignore next */
  cov_grkb1stoa().s[109]++;
  if (assistants.length === 0) {
    /* istanbul ignore next */
    cov_grkb1stoa().b[24][0]++;
    cov_grkb1stoa().s[110]++;
    throw new Error('At least one assistant must be specified');
  } else
  /* istanbul ignore next */
  {
    cov_grkb1stoa().b[24][1]++;
  }
  cov_grkb1stoa().s[111]++;
  for (const assistant of assistants) {
    /* istanbul ignore next */
    cov_grkb1stoa().s[112]++;
    if (!validAssistants.includes(assistant)) {
      /* istanbul ignore next */
      cov_grkb1stoa().b[25][0]++;
      cov_grkb1stoa().s[113]++;
      throw new Error(`Invalid assistant: ${assistant}. Supported assistants: ${validAssistants.join(', ')}`);
    } else
    /* istanbul ignore next */
    {
      cov_grkb1stoa().b[25][1]++;
    }
  }
}
/**
 * Get the absolute path for a given path, resolving it relative to the current working directory
 * @param inputPath - The input path (can be relative or absolute)
 * @returns The absolute path
 */
function getAbsolutePath(inputPath) {
  /* istanbul ignore next */
  cov_grkb1stoa().f[21]++;
  cov_grkb1stoa().s[114]++;
  return path.isAbsolute(inputPath) ?
  /* istanbul ignore next */
  (cov_grkb1stoa().b[26][0]++, inputPath) :
  /* istanbul ignore next */
  (cov_grkb1stoa().b[26][1]++, path.resolve(process.cwd(), inputPath));
}
/**
 * Get the relative path from one path to another
 * @param from - The source path
 * @param to - The target path
 * @returns The relative path
 */
function getRelativePath(from, to) {
  /* istanbul ignore next */
  cov_grkb1stoa().f[22]++;
  cov_grkb1stoa().s[115]++;
  return path.relative(from, to);
}
/**
 * Join multiple path segments into a single path
 * @param segments - Path segments to join
 * @returns The joined path
 */
function joinPath(...segments) {
  /* istanbul ignore next */
  cov_grkb1stoa().f[23]++;
  cov_grkb1stoa().s[116]++;
  return path.join(...segments);
}
/**
 * Get the directory name from a file path
 * @param filePath - The file path
 * @returns The directory name
 */
function getDirName(filePath) {
  /* istanbul ignore next */
  cov_grkb1stoa().f[24]++;
  cov_grkb1stoa().s[117]++;
  return path.dirname(filePath);
}
/**
 * Get the base name (filename) from a file path
 * @param filePath - The file path
 * @param ext - Optional extension to remove
 * @returns The base name
 */
function getBaseName(filePath, ext) {
  /* istanbul ignore next */
  cov_grkb1stoa().f[25]++;
  cov_grkb1stoa().s[118]++;
  return path.basename(filePath, ext);
}
/**
 * Get the file extension from a file path
 * @param filePath - The file path
 * @returns The file extension (including the dot)
 */
function getExtension(filePath) {
  /* istanbul ignore next */
  cov_grkb1stoa().f[26]++;
  cov_grkb1stoa().s[119]++;
  return path.extname(filePath);
}
/**
 * Get the template format for a specific assistant
 * @param assistant - The assistant type
 * @returns The template format to use ('md' for Claude, 'toml' for Gemini)
 */
function getTemplateFormat(assistant) {
  /* istanbul ignore next */
  cov_grkb1stoa().f[27]++;
  cov_grkb1stoa().s[120]++;
  switch (assistant) {
    case 'claude':
      /* istanbul ignore next */
      cov_grkb1stoa().b[27][0]++;
      cov_grkb1stoa().s[121]++;
      return 'md';
    case 'gemini':
      /* istanbul ignore next */
      cov_grkb1stoa().b[27][1]++;
      cov_grkb1stoa().s[122]++;
      return 'toml';
    default:
      /* istanbul ignore next */
      cov_grkb1stoa().b[27][2]++;
      cov_grkb1stoa().s[123]++;
      // This should never happen due to type safety, but adding for completeness
      throw new Error(`Unknown assistant type: ${assistant}`);
  }
}
/**
 * Get the absolute path to a template file
 * @param templateFile - The template filename
 * @returns The absolute path to the template
 */
function getTemplatePath(templateFile) {
  /* istanbul ignore next */
  cov_grkb1stoa().f[28]++;
  cov_grkb1stoa().s[124]++;
  return path.join(__dirname, '..', 'templates', templateFile);
}
/**
 * Get list of directories that will be created for given assistants
 * @param assistants - Array of assistants
 * @param baseDir - Base directory to resolve paths against (defaults to current directory)
 * @returns Array of directory paths to create
 */
function getCreatedDirectories(assistants, baseDir) {
  /* istanbul ignore next */
  cov_grkb1stoa().f[29]++;
  const base =
  /* istanbul ignore next */
  (cov_grkb1stoa().s[125]++,
  /* istanbul ignore next */
  (cov_grkb1stoa().b[28][0]++, baseDir) ||
  /* istanbul ignore next */
  (cov_grkb1stoa().b[28][1]++, '.'));
  const dirs =
  /* istanbul ignore next */
  (cov_grkb1stoa().s[126]++, [resolvePath(base, '.ai/task-manager'), resolvePath(base, '.ai/task-manager/plans')]);
  /* istanbul ignore next */
  cov_grkb1stoa().s[127]++;
  for (const assistant of assistants) {
    /* istanbul ignore next */
    cov_grkb1stoa().s[128]++;
    dirs.push(resolvePath(base, `.${assistant}`));
    /* istanbul ignore next */
    cov_grkb1stoa().s[129]++;
    dirs.push(resolvePath(base, `.${assistant}/commands`));
    /* istanbul ignore next */
    cov_grkb1stoa().s[130]++;
    dirs.push(resolvePath(base, `.${assistant}/commands/tasks`));
  }
  /* istanbul ignore next */
  cov_grkb1stoa().s[131]++;
  return dirs;
}
/**
 * Ensure a directory path ends with a path separator
 * @param dirPath - The directory path
 * @returns The directory path with trailing separator
 */
function ensureTrailingSlash(dirPath) {
  /* istanbul ignore next */
  cov_grkb1stoa().f[30]++;
  cov_grkb1stoa().s[132]++;
  return dirPath.endsWith(path.sep) ?
  /* istanbul ignore next */
  (cov_grkb1stoa().b[29][0]++, dirPath) :
  /* istanbul ignore next */
  (cov_grkb1stoa().b[29][1]++, dirPath + path.sep);
}
/**
 * Create a safe filename by removing or replacing invalid characters
 * @param filename - The input filename
 * @returns A safe filename for the current platform
 */
function sanitizeFilename(filename) {
  /* istanbul ignore next */
  cov_grkb1stoa().f[31]++;
  cov_grkb1stoa().s[133]++;
  // Replace invalid characters with underscores
  return filename.replace(/[<>:"/\\|?*]/g, '_').replace(/\s+/g, '_').replace(/_+/g, '_').replace(/^_|_$/g, '');
}
/**
 * Get the home directory path
 * @returns The user's home directory path
 */
function getHomeDirectory() {
  /* istanbul ignore next */
  cov_grkb1stoa().f[32]++;
  cov_grkb1stoa().s[134]++;
  return require('os').homedir();
}
/**
 * Remove a file or directory recursively
 * @param targetPath - The path to remove
 * @throws FileSystemError if removal fails
 */
async function remove(targetPath) {
  /* istanbul ignore next */
  cov_grkb1stoa().f[33]++;
  cov_grkb1stoa().s[135]++;
  try {
    /* istanbul ignore next */
    cov_grkb1stoa().s[136]++;
    await fs.remove(targetPath);
  } catch (_error) {
    const errorMessage =
    /* istanbul ignore next */
    (cov_grkb1stoa().s[137]++, _error instanceof Error ?
    /* istanbul ignore next */
    (cov_grkb1stoa().b[30][0]++, _error.message) :
    /* istanbul ignore next */
    (cov_grkb1stoa().b[30][1]++, 'Unknown error'));
    /* istanbul ignore next */
    cov_grkb1stoa().s[138]++;
    throw new types_1.FileSystemError(`Failed to remove: ${targetPath}`, {
      originalError: errorMessage,
      path: targetPath
    });
  }
}
/**
 * Move a file or directory from source to destination
 * @param src - Source path
 * @param dest - Destination path
 * @throws FileSystemError if move operation fails
 */
async function move(src, dest) {
  /* istanbul ignore next */
  cov_grkb1stoa().f[34]++;
  cov_grkb1stoa().s[139]++;
  try {
    /* istanbul ignore next */
    cov_grkb1stoa().s[140]++;
    await fs.move(src, dest);
  } catch (_error) {
    const errorMessage =
    /* istanbul ignore next */
    (cov_grkb1stoa().s[141]++, _error instanceof Error ?
    /* istanbul ignore next */
    (cov_grkb1stoa().b[31][0]++, _error.message) :
    /* istanbul ignore next */
    (cov_grkb1stoa().b[31][1]++, 'Unknown error'));
    /* istanbul ignore next */
    cov_grkb1stoa().s[142]++;
    throw new types_1.FileSystemError(`Failed to move from ${src} to ${dest}`, {
      originalError: errorMessage,
      source: src,
      destination: dest
    });
  }
}
/**
 * Resolve path segments relative to a base directory with cross-platform compatibility
 * @param baseDir - The base directory (defaults to '.' if not provided, null, or undefined)
 * @param segments - Additional path segments to resolve
 * @returns The resolved absolute path
 */
function resolvePath(baseDir, ...segments) {
  /* istanbul ignore next */
  cov_grkb1stoa().f[35]++;
  // Handle edge cases: null, undefined, or empty strings
  const base =
  /* istanbul ignore next */
  (cov_grkb1stoa().s[143]++,
  /* istanbul ignore next */
  (cov_grkb1stoa().b[32][0]++, baseDir) ||
  /* istanbul ignore next */
  (cov_grkb1stoa().b[32][1]++, '.'));
  // Filter out any null, undefined, or empty string segments
  const validSegments =
  /* istanbul ignore next */
  (cov_grkb1stoa().s[144]++, segments.filter(segment => {
    /* istanbul ignore next */
    cov_grkb1stoa().f[36]++;
    cov_grkb1stoa().s[145]++;
    return /* istanbul ignore next */(cov_grkb1stoa().b[33][0]++, segment !== null) &&
    /* istanbul ignore next */
    (cov_grkb1stoa().b[33][1]++, segment !== undefined) &&
    /* istanbul ignore next */
    (cov_grkb1stoa().b[33][2]++, segment !== '');
  }));
  /* istanbul ignore next */
  cov_grkb1stoa().s[146]++;
  return path.resolve(base, ...validSegments);
}
/**
 * Parse YAML frontmatter from markdown content
 * @param content - The markdown content with frontmatter
 * @returns Object containing frontmatter and body content
 */
function parseFrontmatter(content) {
  /* istanbul ignore next */
  cov_grkb1stoa().f[37]++;
  const frontmatterRegex =
  /* istanbul ignore next */
  (cov_grkb1stoa().s[147]++, /^---\r?\n([\s\S]*?)\r?\n---(?:\r?\n([\s\S]*))?$/);
  const match =
  /* istanbul ignore next */
  (cov_grkb1stoa().s[148]++, content.match(frontmatterRegex));
  /* istanbul ignore next */
  cov_grkb1stoa().s[149]++;
  if (!match) {
    /* istanbul ignore next */
    cov_grkb1stoa().b[34][0]++;
    cov_grkb1stoa().s[150]++;
    return {
      frontmatter: {},
      body: content
    };
  } else
  /* istanbul ignore next */
  {
    cov_grkb1stoa().b[34][1]++;
  }
  const frontmatterContent =
  /* istanbul ignore next */
  (cov_grkb1stoa().s[151]++,
  /* istanbul ignore next */
  (cov_grkb1stoa().b[35][0]++, match[1]) ||
  /* istanbul ignore next */
  (cov_grkb1stoa().b[35][1]++, ''));
  const bodyContent =
  /* istanbul ignore next */
  (cov_grkb1stoa().s[152]++,
  /* istanbul ignore next */
  (cov_grkb1stoa().b[36][0]++, match[2]) ||
  /* istanbul ignore next */
  (cov_grkb1stoa().b[36][1]++, '')); // match[2] is now undefined when no body exists
  // Simple YAML parser for our specific use case
  const frontmatter =
  /* istanbul ignore next */
  (cov_grkb1stoa().s[153]++, {});
  const lines =
  /* istanbul ignore next */
  (cov_grkb1stoa().s[154]++, frontmatterContent.split('\n'));
  /* istanbul ignore next */
  cov_grkb1stoa().s[155]++;
  for (const line of lines) {
    const trimmed =
    /* istanbul ignore next */
    (cov_grkb1stoa().s[156]++, line.trim());
    /* istanbul ignore next */
    cov_grkb1stoa().s[157]++;
    if (
    /* istanbul ignore next */
    (cov_grkb1stoa().b[38][0]++, !trimmed) ||
    /* istanbul ignore next */
    (cov_grkb1stoa().b[38][1]++, trimmed.startsWith('#'))) {
      /* istanbul ignore next */
      cov_grkb1stoa().b[37][0]++;
      cov_grkb1stoa().s[158]++;
      continue;
    } else
    /* istanbul ignore next */
    {
      cov_grkb1stoa().b[37][1]++;
    }
    const colonIndex =
    /* istanbul ignore next */
    (cov_grkb1stoa().s[159]++, trimmed.indexOf(':'));
    /* istanbul ignore next */
    cov_grkb1stoa().s[160]++;
    if (colonIndex === -1) {
      /* istanbul ignore next */
      cov_grkb1stoa().b[39][0]++;
      cov_grkb1stoa().s[161]++;
      continue;
    } else
    /* istanbul ignore next */
    {
      cov_grkb1stoa().b[39][1]++;
    }
    const key =
    /* istanbul ignore next */
    (cov_grkb1stoa().s[162]++, trimmed.substring(0, colonIndex).trim());
    const value =
    /* istanbul ignore next */
    (cov_grkb1stoa().s[163]++, trimmed.substring(colonIndex + 1).trim());
    // Remove quotes if present
    /* istanbul ignore next */
    cov_grkb1stoa().s[164]++;
    frontmatter[key] = value.replace(/^["']|["']$/g, '');
  }
  /* istanbul ignore next */
  cov_grkb1stoa().s[165]++;
  return {
    frontmatter,
    body: bodyContent
  };
}
/**
 * Escape a string for TOML format
 * @param str - The string to escape
 * @returns The escaped string suitable for TOML
 */
function escapeTomlString(str) {
  /* istanbul ignore next */
  cov_grkb1stoa().f[38]++;
  cov_grkb1stoa().s[166]++;
  return str.replace(/\\/g, '\\\\').replace(/"/g, '\\"').replace(/\n/g, '\\n').replace(/\r/g, '\\r').replace(/\t/g, '\\t');
}
/**
 * Convert markdown template content to TOML format for Gemini
 * @param mdContent - The markdown template content
 * @returns The converted TOML content
 */
function convertMdToToml(mdContent) {
  /* istanbul ignore next */
  cov_grkb1stoa().f[39]++;
  const {
    frontmatter,
    body
  } =
  /* istanbul ignore next */
  (cov_grkb1stoa().s[167]++, parseFrontmatter(mdContent));
  // Process the body content for Gemini format
  const processedBody =
  /* istanbul ignore next */
  (cov_grkb1stoa().s[168]++, body
  // Transform $ARGUMENTS → {{args}} (not followed by alphanumeric that would make it an identifier)
  .replace(/\$ARGUMENTS(?![0-9])/g, '{{args}}')
  // Transform $1 → {{plan_id}} (exact match, not part of longer number)
  .replace(/\$1(?![0-9])/g, '{{plan_id}}').replace(/\$2(?![0-9])/g, '{{param2}}').replace(/\$3(?![0-9])/g, '{{param3}}'));
  // Build TOML content
  let tomlContent =
  /* istanbul ignore next */
  (cov_grkb1stoa().s[169]++, '[metadata]\n');
  // Add frontmatter fields to metadata section
  /* istanbul ignore next */
  cov_grkb1stoa().s[170]++;
  for (const [key, value] of Object.entries(frontmatter)) {
    /* istanbul ignore next */
    cov_grkb1stoa().s[171]++;
    if (key === 'argument-hint') {
      /* istanbul ignore next */
      cov_grkb1stoa().b[40][0]++;
      // Special handling for argument-hint - convert to {{}} format
      const convertedHint =
      /* istanbul ignore next */
      (cov_grkb1stoa().s[172]++, String(value).replace(/\[plan-ID\]/g, '{{plan_id}}').replace(/\[user-prompt\]/g, '{{args}}'));
      /* istanbul ignore next */
      cov_grkb1stoa().s[173]++;
      tomlContent += `argument-hint = "${escapeTomlString(convertedHint)}"\n`;
    } else {
      /* istanbul ignore next */
      cov_grkb1stoa().b[40][1]++;
      cov_grkb1stoa().s[174]++;
      tomlContent += `${key} = "${escapeTomlString(String(value))}"\n`;
    }
  }
  // Add the prompt section with escaped content
  /* istanbul ignore next */
  cov_grkb1stoa().s[175]++;
  tomlContent += '\n[prompt]\n';
  /* istanbul ignore next */
  cov_grkb1stoa().s[176]++;
  tomlContent += `content = """${escapeTomlString(processedBody)}"""\n`;
  /* istanbul ignore next */
  cov_grkb1stoa().s[177]++;
  return tomlContent;
}
/**
 * Read a markdown template file and optionally convert to TOML
 * @param templatePath - Path to the markdown template
 * @param targetFormat - Target format ('md' or 'toml')
 * @returns The template content in the requested format
 */
async function readAndProcessTemplate(templatePath, targetFormat) {
  /* istanbul ignore next */
  cov_grkb1stoa().f[40]++;
  cov_grkb1stoa().s[178]++;
  try {
    const mdContent =
    /* istanbul ignore next */
    (cov_grkb1stoa().s[179]++, await fs.readFile(templatePath, 'utf-8'));
    /* istanbul ignore next */
    cov_grkb1stoa().s[180]++;
    if (targetFormat === 'md') {
      /* istanbul ignore next */
      cov_grkb1stoa().b[41][0]++;
      cov_grkb1stoa().s[181]++;
      return mdContent;
    } else {
      /* istanbul ignore next */
      cov_grkb1stoa().b[41][1]++;
      cov_grkb1stoa().s[182]++;
      if (targetFormat === 'toml') {
        /* istanbul ignore next */
        cov_grkb1stoa().b[42][0]++;
        cov_grkb1stoa().s[183]++;
        return convertMdToToml(mdContent);
      } else {
        /* istanbul ignore next */
        cov_grkb1stoa().b[42][1]++;
        cov_grkb1stoa().s[184]++;
        throw new Error(`Unsupported template format: ${targetFormat}`);
      }
    }
  } catch (_error) {
    const errorMessage =
    /* istanbul ignore next */
    (cov_grkb1stoa().s[185]++, _error instanceof Error ?
    /* istanbul ignore next */
    (cov_grkb1stoa().b[43][0]++, _error.message) :
    /* istanbul ignore next */
    (cov_grkb1stoa().b[43][1]++, 'Unknown error'));
    /* istanbul ignore next */
    cov_grkb1stoa().s[186]++;
    throw new types_1.FileSystemError(`Failed to read and process template: ${templatePath}`, {
      originalError: errorMessage,
      path: templatePath,
      targetFormat
    });
  }
}
/**
 * Write processed template content to destination
 * @param content - The template content to write
 * @param destPath - Destination file path
 */
async function writeProcessedTemplate(content, destPath) {
  /* istanbul ignore next */
  cov_grkb1stoa().f[41]++;
  cov_grkb1stoa().s[187]++;
  try {
    /* istanbul ignore next */
    cov_grkb1stoa().s[188]++;
    // Ensure destination directory exists
    await fs.ensureDir(path.dirname(destPath));
    // Write the content
    /* istanbul ignore next */
    cov_grkb1stoa().s[189]++;
    await fs.writeFile(destPath, content, 'utf-8');
  } catch (_error) {
    const errorMessage =
    /* istanbul ignore next */
    (cov_grkb1stoa().s[190]++, _error instanceof Error ?
    /* istanbul ignore next */
    (cov_grkb1stoa().b[44][0]++, _error.message) :
    /* istanbul ignore next */
    (cov_grkb1stoa().b[44][1]++, 'Unknown error'));
    /* istanbul ignore next */
    cov_grkb1stoa().s[191]++;
    throw new types_1.FileSystemError(`Failed to write processed template: ${destPath}`, {
      originalError: errorMessage,
      path: destPath
    });
  }
}
/**
 * Get the names of all markdown template files in a given subdirectory of templates.
 * @param templateSubdir - The subdirectory within templates (e.g., 'commands/tasks')
 * @returns An array of template names (filenames without .md extension)
 * @throws FileSystemError if the directory cannot be read
 */
async function getMarkdownTemplateNames(templateSubdir) {
  /* istanbul ignore next */
  cov_grkb1stoa().f[42]++;
  const fullPath =
  /* istanbul ignore next */
  (cov_grkb1stoa().s[192]++, path.join(__dirname, '..', 'templates', templateSubdir));
  /* istanbul ignore next */
  cov_grkb1stoa().s[193]++;
  try {
    const files =
    /* istanbul ignore next */
    (cov_grkb1stoa().s[194]++, await fs.readdir(fullPath));
    /* istanbul ignore next */
    cov_grkb1stoa().s[195]++;
    return files.filter(file => {
      /* istanbul ignore next */
      cov_grkb1stoa().f[43]++;
      cov_grkb1stoa().s[196]++;
      return file.endsWith('.md');
    }).map(file => {
      /* istanbul ignore next */
      cov_grkb1stoa().f[44]++;
      cov_grkb1stoa().s[197]++;
      return path.basename(file, '.md');
    });
  } catch (_error) {
    const errorMessage =
    /* istanbul ignore next */
    (cov_grkb1stoa().s[198]++, _error instanceof Error ?
    /* istanbul ignore next */
    (cov_grkb1stoa().b[45][0]++, _error.message) :
    /* istanbul ignore next */
    (cov_grkb1stoa().b[45][1]++, 'Unknown error'));
    /* istanbul ignore next */
    cov_grkb1stoa().s[199]++;
    throw new types_1.FileSystemError(`Failed to read template directory: ${fullPath}`, {
      originalError: errorMessage,
      path: fullPath
    });
  }
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,