{"version":3,"names":["cov_2fgtgop73f","path","hash","global","Function","gcv","coverageData","statementMap","start","line","column","end","fnMap","name","decl","loc","branchMap","type","locations","undefined","s","f","b","inputSourceMap","file","mappings","names","sources","sourcesContent","version","_coverageSchema","coverage","actualCoverage","exports","init","isInitialized","getInitInfo","types_1","require","logger","__importStar","utils_1","options","baseDir","destinationDirectory","resolvedBaseDir","resolvePath","info","assistants","parseAssistants","debug","join","validateAssistants","ensureDir","copyCommonTemplates","assistant","createAssistantStructure","success","templateFormat","getTemplateFormat","displayWorkflowHelp","message","data","error","errorMessage","errorInstance","Error","includes","FileSystemError","String","templates","source","getTemplatePath","dest","template","exists","templatePath","copyTemplate","tasksDir","commandTemplateNames","getMarkdownTemplateNames","templateName","templateFile","mdSourcePath","destPath","processedContent","readAndProcessTemplate","writeProcessedTemplate","targetDir","hasAiTaskManager","hasClaudeConfig","hasGeminiConfig","push","separator","repeat","thinSeparator","slice"],"sources":["/workspace/src/index.ts"],"sourcesContent":["/**\n * Main Init Command Implementation\n *\n * This file contains the implementation of the init command\n * Handles initialization of new AI task management projects\n */\n\nimport { InitOptions, Assistant, FileSystemError, CommandResult } from './types';\nimport * as logger from './logger';\nimport {\n  parseAssistants,\n  validateAssistants,\n  ensureDir,\n  copyTemplate,\n  getTemplatePath,\n  exists,\n  resolvePath,\n  getTemplateFormat,\n  readAndProcessTemplate,\n  writeProcessedTemplate,\n  getMarkdownTemplateNames,\n} from './utils';\n\n/**\n * Initialize a new AI Task Manager project\n *\n * Creates directory structures and copies template files based on the selected assistants.\n * Validates input, creates necessary directories, and copies appropriate templates.\n *\n * @param options - Initialization options containing assistant selection\n * @returns CommandResult indicating success or failure with details\n */\nexport async function init(options: InitOptions): Promise<CommandResult> {\n  try {\n    // Determine base directory\n    const baseDir = options.destinationDirectory || '.';\n    const resolvedBaseDir = resolvePath(baseDir);\n\n    // Log start of initialization\n    await logger.info(`Initializing AI Task Manager in: ${resolvedBaseDir}...`);\n\n    // Parse and validate assistants\n    const assistants = parseAssistants(options.assistants);\n    await logger.debug(`Parsed assistants: ${assistants.join(', ')}`);\n\n    // Validate assistants\n    validateAssistants(assistants);\n    await logger.debug('Assistant validation passed');\n\n    // Create .ai/task-manager structure\n    await logger.info('üìÅ Creating .ai/task-manager directory structure...');\n    await ensureDir(resolvePath(baseDir, '.ai/task-manager/plans'));\n\n    // Copy common templates to .ai/task-manager\n    await logger.info('üìã Copying common template files...');\n    await copyCommonTemplates(baseDir);\n\n    // Create assistant-specific directories and copy templates\n    for (const assistant of assistants) {\n      await logger.info(`ü§ñ Setting up ${assistant} assistant configuration...`);\n      await createAssistantStructure(assistant, baseDir);\n    }\n\n    // Show success message with created directories\n    await logger.success('üéâ AI Task Manager initialized successfully!');\n\n    for (const assistant of assistants) {\n      const templateFormat = getTemplateFormat(assistant);\n      await logger.info(\n        `  ‚úì ${resolvePath(baseDir, `.${assistant}/commands/tasks/create-plan.${templateFormat}`)}`\n      );\n      await logger.info(\n        `  ‚úì ${resolvePath(baseDir, `.${assistant}/commands/tasks/execute-blueprint.${templateFormat}`)}`\n      );\n      await logger.info(\n        `  ‚úì ${resolvePath(baseDir, `.${assistant}/commands/tasks/generate-tasks.${templateFormat}`)}`\n      );\n    }\n\n    // Show suggested workflow help text\n    await displayWorkflowHelp();\n\n    return {\n      success: true,\n      message: 'AI Task Manager initialized successfully!',\n      data: { assistants },\n    };\n  } catch (error) {\n    let errorMessage: string;\n    let errorInstance: Error;\n\n    if (error instanceof Error) {\n      errorMessage = error.message;\n      errorInstance = error;\n      if (\n        error.message.includes('Invalid assistant') ||\n        error.message.includes('Assistants parameter')\n      ) {\n        await logger.error(`Configuration Error: ${error.message}`);\n      } else if (error instanceof FileSystemError) {\n        await logger.error(`File System Error: ${error.message}`);\n      } else {\n        await logger.error(`Initialization failed: ${error.message}`);\n      }\n    } else {\n      errorMessage = 'Initialization failed with unknown error';\n      errorInstance = new Error(String(error));\n      await logger.error(errorMessage);\n    }\n\n    return {\n      success: false,\n      message: errorMessage,\n      error: errorInstance,\n    };\n  }\n}\n\n/**\n * Copy common template files to .ai/task-manager directory\n */\nasync function copyCommonTemplates(baseDir: string): Promise<void> {\n  const templates = [\n    {\n      source: getTemplatePath('ai-task-manager/TASK_MANAGER_INFO.md'),\n      dest: resolvePath(baseDir, '.ai/task-manager/TASK_MANAGER_INFO.md'),\n    },\n    {\n      source: getTemplatePath('ai-task-manager/VALIDATION_GATES.md'),\n      dest: resolvePath(baseDir, '.ai/task-manager/VALIDATION_GATES.md'),\n    },\n  ];\n\n  for (const template of templates) {\n    // Check if source template exists\n    if (!(await exists(template.source))) {\n      throw new FileSystemError(`Template file not found: ${template.source}`, {\n        templatePath: template.source,\n      });\n    }\n\n    await copyTemplate(template.source, template.dest);\n    await logger.debug(`üì§ Copied ${template.source} to ${template.dest}`);\n  }\n}\n\n/**\n * Create directory structure and copy templates for a specific assistant\n */\nasync function createAssistantStructure(assistant: Assistant, baseDir: string): Promise<void> {\n  // Create assistant directory structure\n  const tasksDir = resolvePath(baseDir, `.${assistant}/commands/tasks`);\n\n  await ensureDir(tasksDir);\n  await logger.debug(`üèóÔ∏è Created directory structure for ${assistant} in ${tasksDir}`);\n\n  // Determine template format based on assistant type\n  const templateFormat = getTemplateFormat(assistant);\n  await logger.debug(`üé® Using ${templateFormat} template format for ${assistant} assistant`);\n\n  // Copy assistant-specific command templates with appropriate format\n  const commandTemplateNames = await getMarkdownTemplateNames('commands/tasks');\n\n  for (const templateName of commandTemplateNames) {\n    const templateFile = `${templateName}.${templateFormat}`;\n\n    // Always read from the MD template source (DRY principle)\n    const mdSourcePath = getTemplatePath(`commands/tasks/${templateName}.md`);\n    const destPath = resolvePath(baseDir, `.${assistant}/commands/tasks/${templateFile}`);\n\n    // Check if MD source template exists\n    if (!(await exists(mdSourcePath))) {\n      throw new FileSystemError(`Command template not found: ${mdSourcePath}`, {\n        templatePath: mdSourcePath,\n        assistant,\n        templateFormat,\n      });\n    }\n\n    // Read and process the template based on target format\n    const processedContent = await readAndProcessTemplate(mdSourcePath, templateFormat);\n\n    // Write the processed content to destination\n    await writeProcessedTemplate(processedContent, destPath);\n\n    await logger.debug(\n      `‚ö° Processed ${templateName}.md and created ${templateFile} for ${assistant} at ${destPath}`\n    );\n  }\n}\n\n/**\n * Check if a directory already has AI Task Manager initialized\n */\nexport async function isInitialized(baseDir?: string): Promise<boolean> {\n  const targetDir = baseDir || '.';\n  return await exists(resolvePath(targetDir, '.ai/task-manager'));\n}\n\n/**\n * Get information about existing initialization\n */\nexport async function getInitInfo(baseDir?: string): Promise<{\n  hasAiTaskManager: boolean;\n  hasClaudeConfig: boolean;\n  hasGeminiConfig: boolean;\n  assistants: Assistant[];\n}> {\n  const targetDir = baseDir || '.';\n  const hasAiTaskManager = await exists(resolvePath(targetDir, '.ai/task-manager'));\n  const hasClaudeConfig = await exists(resolvePath(targetDir, '.claude/commands/tasks'));\n  const hasGeminiConfig = await exists(resolvePath(targetDir, '.gemini/commands/tasks'));\n\n  const assistants: Assistant[] = [];\n  if (hasClaudeConfig) assistants.push('claude');\n  if (hasGeminiConfig) assistants.push('gemini');\n\n  return {\n    hasAiTaskManager,\n    hasClaudeConfig,\n    hasGeminiConfig,\n    assistants,\n  };\n}\n\n/**\n * Display formatted workflow help text to guide users after successful installation\n */\nasync function displayWorkflowHelp(): Promise<void> {\n  const separator = '‚ïê'.repeat(60);\n  const thinSeparator = '‚îÄ'.repeat(60);\n  \n  await logger.info('');\n  await logger.info(`‚ïî${separator}‚ïó`);\n  await logger.info(`‚ïë${' '.repeat(18)}üöÄ SUGGESTED WORKFLOW üöÄ${' '.repeat(18)}‚ïë`);\n  await logger.info(`‚ïö${separator}‚ïù`);\n  await logger.info('');\n  \n  await logger.info(`‚îå‚îÄ üìã ONE-TIME SETUP ${thinSeparator.slice(20)}‚îê`);\n  await logger.info('‚îÇ                                                            ‚îÇ');\n  await logger.info('‚îÇ  Review and tweak these files to match your project:      ‚îÇ');\n  await logger.info('‚îÇ  ‚Ä¢ .ai/task-manager/TASK_MANAGER_INFO.md                   ‚îÇ');\n  await logger.info('‚îÇ  ‚Ä¢ .ai/task-manager/VALIDATION_GATES.md                    ‚îÇ');\n  await logger.info('‚îÇ                                                            ‚îÇ');\n  await logger.info(`‚îî${thinSeparator}‚îò`);\n  await logger.info('');\n  \n  await logger.info(`‚îå‚îÄ üîÑ DAY-TO-DAY WORKFLOW ${thinSeparator.slice(22)}‚îê`);\n  await logger.info('‚îÇ                                                            ‚îÇ');\n  await logger.info('‚îÇ  1Ô∏è‚É£  Create a plan:                                        ‚îÇ');\n  await logger.info('‚îÇ      /tasks:create-plan Create an authentication...       ‚îÇ');\n  await logger.info('‚îÇ                                                            ‚îÇ');\n  await logger.info('‚îÇ  2Ô∏è‚É£  Provide additional context if the assistant needs it  ‚îÇ');\n  await logger.info('‚îÇ                                                            ‚îÇ');\n  await logger.info('‚îÇ  3Ô∏è‚É£  ‚ö†Ô∏è  MANUALLY REVIEW THE PLAN (don\\'t skip this!)      ‚îÇ');\n  await logger.info('‚îÇ      Find it in: .ai/task-manager/plans/01--*/plan-*.md   ‚îÇ');\n  await logger.info('‚îÇ                                                            ‚îÇ');\n  await logger.info('‚îÇ  4Ô∏è‚É£  Create the tasks for the plan:                        ‚îÇ');\n  await logger.info('‚îÇ      /tasks:generate-tasks 1                              ‚îÇ');\n  await logger.info('‚îÇ                                                            ‚îÇ');\n  await logger.info('‚îÇ  5Ô∏è‚É£  ‚ö†Ô∏è  REVIEW THE TASKS LIST (avoid scope creep!)       ‚îÇ');\n  await logger.info('‚îÇ      Find them in: .ai/task-manager/plans/01--*/tasks/    ‚îÇ');\n  await logger.info('‚îÇ                                                            ‚îÇ');\n  await logger.info('‚îÇ  6Ô∏è‚É£  Execute the tasks:                                    ‚îÇ');\n  await logger.info('‚îÇ      /tasks:execute-blueprint 1                           ‚îÇ');\n  await logger.info('‚îÇ                                                            ‚îÇ');\n  await logger.info('‚îÇ  7Ô∏è‚É£  Review the implementation and generated tests         ‚îÇ');\n  await logger.info('‚îÇ                                                            ‚îÇ');\n  await logger.info(`‚îî${thinSeparator}‚îò`);\n  await logger.info('');\n  await logger.info('üí° Pro tip: The manual review steps are crucial for success!');\n  await logger.info('');\n}\n"],"mappings":"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","ignoreList":[]}